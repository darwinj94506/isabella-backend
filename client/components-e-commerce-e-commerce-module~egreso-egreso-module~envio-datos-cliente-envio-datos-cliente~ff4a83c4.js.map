{"version":3,"sources":["webpack:///./node_modules/@angular/http/fesm5/http.js","webpack:///./src/app/content/pages/components/e-commerce/_core/models/translation.ts","webpack:///./src/app/content/pages/components/e-commerce/_core/services/mercado-libre.service.ts","webpack:///./src/app/content/pages/components/e-commerce/_core/services/producto.service.ts","webpack:///./src/app/content/pages/components/e-commerce/_core/utils/layout-utils.service.ts","webpack:///./src/app/content/pages/components/e-commerce/_shared/action-natification/action-notification.component.html","webpack:///./src/app/content/pages/components/e-commerce/_shared/action-natification/action-notification.component.ts","webpack:///./src/app/content/pages/components/e-commerce/_shared/alert/alert.component.html","webpack:///./src/app/content/pages/components/e-commerce/_shared/alert/alert.component.ts","webpack:///./src/app/content/pages/components/e-commerce/_shared/delete-entity-dialog/delete-entity-dialog.component.html","webpack:///./src/app/content/pages/components/e-commerce/_shared/delete-entity-dialog/delete-entity-dialog.component.ts","webpack:///./src/app/content/pages/components/e-commerce/_shared/fetch-entity-dialog/fetch-entity-dialog.component.html","webpack:///./src/app/content/pages/components/e-commerce/_shared/fetch-entity-dialog/fetch-entity-dialog.component.ts","webpack:///./src/app/content/pages/components/e-commerce/_shared/modal-products/modal-products.component.html","webpack:///./src/app/content/pages/components/e-commerce/_shared/modal-products/modal-products.component.scss","webpack:///./src/app/content/pages/components/e-commerce/_shared/modal-products/modal-products.component.ts","webpack:///./src/app/content/pages/components/e-commerce/_shared/shared-alert.module.ts","webpack:///./src/app/content/pages/components/e-commerce/_shared/update-status-dialog/update-status-dialog.component.html","webpack:///./src/app/content/pages/components/e-commerce/_shared/update-status-dialog/update-status-dialog.component.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;;AAE4E;AACd;AAC5B;AACkB;;AAEpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,+BAA+B;AAC7E,iBAAiB,wDAAU;AAC3B,QAAQ,gEAAU;AAClB,QAAQ,wDAAU;AAClB;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,sCAAsC;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,gCAAgC;AACjC;AACA,sDAAsD,eAAe;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,oCAAoC;AACrC;AACA,iEAAiE,cAAc;AAC/E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,kCAAkC;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,kDAAkD;;AAEnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ,wDAAwD;AACxD;AACA;AACA,uDAAuD;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD,kCAAkC,EAAE;AACrF,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,6CAA6C,kCAAkC,EAAE;AACjF,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yDAAyD,uEAAuE,EAAE;AAClI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,8CAA8C;AAC3F;AACA;AACA;AACA,0CAA0C,mDAAmD;AAC7F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,2CAA2C;AACvF;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA,yCAAyC,gCAAgC,sDAAQ,gBAAgB,EAAE;AACnG;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,yEAAyE;AACtH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,eAAe;AACnB;AACA;AACA;AACA;AACA;AACA,IAAI,0BAA0B;AAC9B;AACA,6CAA6C,yBAAyB;AACtE,wBAAwB,kBAAkB;AAC1C;AACA;AACA;AACA;AACA;AACA,WAAW,0BAA0B;AACrC;AACA;AACA,aAAa,cAAc;AAC3B,IAAI;AACJ;AACA;AACA,0CAA0C,YAAY;AACtD;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,WAAW;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,0BAA0B;AACzC;AACA;AACA,gBAAgB;AAChB,QAAQ;AACR;AACA;AACA,QAAQ;AACR,gDAAgD;AAChD,8CAA8C,YAAY;AAC1D,wCAAwC;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,CAAC;AACD;AACA,gBAAgB,sBAAsB;AACtC;AACA;AACA;AACA,sBAAsB,cAAc;AACpC;AACA,kDAAkD,sBAAsB;AACxE,wBAAwB,eAAe;AACvC,YAAY,WAAW,YAAY,yBAAyB;AAC5D;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,UAAU;AACrB,WAAW,oEAAoE;AAC/E;AACA,WAAW,IAAI;AACf;AACA;AACA,oCAAoC,kBAAkB;AACtD;AACA;AACA,oCAAoC,8CAA8C;AAClF;AACA;AACA,gEAAgE;AAChE;AACA;AACA;AACA;AACA;AACA,WAAW,8BAA8B;AACzC;AACA;AACA;AACA;AACA,2BAA2B,qBAAqB;AAChD,IAAI;AACJ,8EAA8E;AAC9E,0CAA0C;AAC1C;AACA;AACA;AACA;AACA;AACA,IAAI,uDAAS;AACb;AACA,kCAAkC,oFAAoF;AACtH;AACA,0BAA0B,wDAAU;AACpC,QAAQ,gEAAU;AAClB,QAAQ,wDAAU;AAClB;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,cAAc;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,wCAAwC;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,YAAY;AACtD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,gBAAgB;AAC/C;AACA;AACA;AACA;AACA;AACA,qBAAqB,oDAAM;AAC3B;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD,8BAA8B;AACrF,2DAA2D,gCAAgC;AAC3F;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD,mBAAmB;AAC3E;AACA;AACA;AACA;AACA;AACA,qEAAqE;AACrE;AACA;AACA;AACA;AACA;AACA,WAAW,8BAA8B;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,gBAAgB;AACnD,sCAAsC,mCAAmC;AACzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD,kCAAkC;AACxF;AACA;AACA;AACA;AACA,yDAAyD,wCAAwC;AACjG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,kBAAkB;AAC7C;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,kBAAkB;AAC7C;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,yCAAyC,mGAAmG,EAAE;AAC9I,SAAS;AACT;AACA;AACA,yDAAyD,8BAA8B;AACvF;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,cAAc,MAAM;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,yBAAyB;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD,mCAAmC;AAC3F,4DAA4D,4CAA4C;AACxG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD,mCAAmC;AACtF;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,wDAAU;AAC7B,QAAQ,gEAAU;AAClB;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,+CAAU;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAiE,kEAAkE;AACnI;AACA;AACA;AACA;AACA;AACA;AACA,2DAA2D,sCAAsC;AACjG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2DAA2D,gDAAgD;AAC3G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,MAAM,wBAAwB;AAC9B;AACA;AACA;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,wDAAU;AAC7B,QAAQ,gEAAU;AAClB,QAAQ,wDAAU;AAClB;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,qBAAqB;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,+CAAU;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2DAA2D,iFAAiF;AAC5I;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yDAAyD,sDAAsD,EAAE;AACjH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yFAAyF;AACzF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,4BAA4B;AACjE,qCAAqC,8BAA8B;AACnE;AACA;AACA;AACA;AACA,wBAAwB,yEAAO;AAC/B;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,YAAY,oBAAoB;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,wDAAwD;AACnE;AACA;AACA;AACA,QAAQ;AACR;AACA,QAAQ,4CAA4C;AACpD,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,wDAAU;AAC3B,QAAQ,gEAAU;AAClB,QAAQ,wDAAU;AAClB;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,cAAc;AAClB;AACA;AACA;AACA;AACA,yEAAyE;AACzE;AACA;AACA;AACA,WAAW,uCAAuC;AAClD;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA,yDAAyD;AACzD,4CAA4C;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,WAAW;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,oBAAoB,EAAE;AAChD;AACA;AACA;AACA,gCAAgC,sBAAsB,EAAE;AACxD;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,uCAAuC;AACtD;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA,QAAQ;AACR,6DAA6D;AAC7D,gDAAgD;AAChD,wCAAwC;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,gBAAgB;AACnD;AACA;AACA;AACA;AACA,+CAA+C,8CAA8C,EAAE;AAC/F;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,gBAAgB,qBAAqB;AACrC;AACA;AACA,eAAe;AACf,sBAAsB,cAAc;AACpC;AACA,kDAAkD,qBAAqB;AACvE,wBAAwB,eAAe;AACvC,YAAY,WAAW,qBAAqB,uBAAuB;AACnE;AACA;AACA,WAAW,mCAAmC;AAC9C;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA,gEAAgE;AAChE;AACA;AACA;AACA,WAAW,2CAA2C;AACtD;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ,yDAAyD;AACzD,4CAA4C;AAC5C,oCAAoC;AACpC;AACA;AACA;AACA;AACA;AACA,IAAI,uDAAS;AACb;AACA,kCAAkC,oDAAoD;AACtF;AACA,yBAAyB,wDAAU;AACnC,QAAQ,gEAAU;AAClB,QAAQ,wDAAU;AAClB;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4EAA4E,WAAW;AACvF,IAAI,YAAY;AAChB,qFAAqF,WAAW;AAChG;AACA;AACA;AACA,WAAW,qBAAqB;AAChC,WAAW,6CAA6C;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI,uDAAS;AACbqDAAqD,EAAE;AACrG;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,gDAAgD,2BAA2B;AAC3E;AACA;AACA;AACA;AACA;AACA,+DAA+D,eAAe;AAC9E;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,qBAAqB;AAChC,WAAW,IAAI;AACf;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,iBAAiB;AACrB,QAAQ,iBAAiB;AACzB;AACA;AACA;AACA;AACA,WAAW,yBAAyB;AACpC,WAAW,YAAY;AACvB;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU,cAAc,wDAAwD;AAChF;AACA,WAAW,yBAAyB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oGAAoG,aAAa;AACjH;AACA;AACA;AACA;AACA;AACA,oGAAoG,aAAa;AACjH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oGAAoG,aAAa;AACjH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,wDAAU;AACrB,QAAQ,gEAAU;AAClB,QAAQ,wDAAU;AAClB;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA,UAAU,cAAc,wDAAwD;AAChF;AACA,WAAW,yBAAyB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,wDAAU;AACtB,QAAQ,gEAAU;AAClB,QAAQ,wDAAU;AAClB;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,wDAAU;AAC3B,QAAQ,8DAAQ;AAChB;AACA;AACA;AACA,iBAAiB,6EAA6E;AAC9F;AACA,iBAAiB,wDAAwD;AACzE,iBAAiB,0DAA0D;AAC3E;AACA,iBAAiB,sEAAsE;AACvF;AACA,SAAS;AACT;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,wDAAU;AAC5B,QAAQ,8DAAQ;AAChB;AACA;AACA;AACA,iBAAiB,iFAAiF;AAClG;AACA,iBAAiB,wDAAwD;AACzE,iBAAiB,0DAA0D;AAC3E;AACA;AACA,SAAS;AACT;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,qDAAO;;AAEzB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEynB;AACznB;;;;;;;;;;;;;AC70DA;AAAA;AAAA;;;;;GAKG;AACH;IA6BI,qBAAY,IAAY,EAAE,IAAY,EAAE,IAAY;QAChD,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;IACrB,CAAC;IAED,sBAAW,8BAAK;aAAhB;YACI,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC;QACrB,CAAC;aAED,UAAiB,KAAa;YAC1B,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC;QACtB,CAAC;;;OAJA;IAMD,sBAAW,8BAAK;aAAhB;YACI,MAAM,CAAC,IAAI,CAAC,I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","file":"components-e-commerce-e-commerce-module~egreso-egreso-module~envio-datos-cliente-envio-datos-cliente~ff4a83c4.js","sourcesContent":["/**\n * @license Angular v6.1.10\n * (c) 2010-2018 Google, Inc. https://angular.io/\n * License: MIT\n */\n\nimport { __decorate, __metadata, __extends, __read, __spread } from 'tslib';\nimport { Injectable, NgModule, Version } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { ɵgetDOM } from '@angular/platform-browser';\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A backend for http that uses the `XMLHttpRequest` browser API.\n *\n * Take care not to evaluate this in non-browser contexts.\n *\n * @deprecated see https://angular.io/guide/http\n */\nvar BrowserXhr = /** @class */ (function () {\n    function BrowserXhr() {\n    }\n    BrowserXhr.prototype.build = function () { return (new XMLHttpRequest()); };\n    BrowserXhr = __decorate([\n        Injectable(),\n        __metadata(\"design:paramtypes\", [])\n    ], BrowserXhr);\n    return BrowserXhr;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Supported http methods.\n * @deprecated see https://angular.io/guide/http\n */\nvar RequestMethod;\n(function (RequestMethod) {\n    RequestMethod[RequestMethod[\"Get\"] = 0] = \"Get\";\n    RequestMethod[RequestMethod[\"Post\"] = 1] = \"Post\";\n    RequestMethod[RequestMethod[\"Put\"] = 2] = \"Put\";\n    RequestMethod[RequestMethod[\"Delete\"] = 3] = \"Delete\";\n    RequestMethod[RequestMethod[\"Options\"] = 4] = \"Options\";\n    RequestMethod[RequestMethod[\"Head\"] = 5] = \"Head\";\n    RequestMethod[RequestMethod[\"Patch\"] = 6] = \"Patch\";\n})(RequestMethod || (RequestMethod = {}));\n/**\n * All possible states in which a connection can be, based on\n * [States](http://www.w3.org/TR/XMLHttpRequest/#states) from the `XMLHttpRequest` spec, but with an\n * additional \"CANCELLED\" state.\n * @deprecated see https://angular.io/guide/http\n */\nvar ReadyState;\n(function (ReadyState) {\n    ReadyState[ReadyState[\"Unsent\"] = 0] = \"Unsent\";\n    ReadyState[ReadyState[\"Open\"] = 1] = \"Open\";\n    ReadyState[ReadyState[\"HeadersReceived\"] = 2] = \"HeadersReceived\";\n    ReadyState[ReadyState[\"Loading\"] = 3] = \"Loading\";\n    ReadyState[ReadyState[\"Done\"] = 4] = \"Done\";\n    ReadyState[ReadyState[\"Cancelled\"] = 5] = \"Cancelled\";\n})(ReadyState || (ReadyState = {}));\n/**\n * Acceptable response types to be associated with a {@link Response}, based on\n * [ResponseType](https://fetch.spec.whatwg.org/#responsetype) from the Fetch spec.\n * @deprecated see https://angular.io/guide/http\n */\nvar ResponseType;\n(function (ResponseType) {\n    ResponseType[ResponseType[\"Basic\"] = 0] = \"Basic\";\n    ResponseType[ResponseType[\"Cors\"] = 1] = \"Cors\";\n    ResponseType[ResponseType[\"Default\"] = 2] = \"Default\";\n    ResponseType[ResponseType[\"Error\"] = 3] = \"Error\";\n    ResponseType[ResponseType[\"Opaque\"] = 4] = \"Opaque\";\n})(ResponseType || (ResponseType = {}));\n/**\n * Supported content type to be automatically associated with a {@link Request}.\n * @deprecated see https://angular.io/guide/http\n */\nvar ContentType;\n(function (ContentType) {\n    ContentType[ContentType[\"NONE\"] = 0] = \"NONE\";\n    ContentType[ContentType[\"JSON\"] = 1] = \"JSON\";\n    ContentType[ContentType[\"FORM\"] = 2] = \"FORM\";\n    ContentType[ContentType[\"FORM_DATA\"] = 3] = \"FORM_DATA\";\n    ContentType[ContentType[\"TEXT\"] = 4] = \"TEXT\";\n    ContentType[ContentType[\"BLOB\"] = 5] = \"BLOB\";\n    ContentType[ContentType[\"ARRAY_BUFFER\"] = 6] = \"ARRAY_BUFFER\";\n})(ContentType || (ContentType = {}));\n/**\n * Define which buffer to use to store the response\n * @deprecated see https://angular.io/guide/http\n */\nvar ResponseContentType;\n(function (ResponseContentType) {\n    ResponseContentType[ResponseContentType[\"Text\"] = 0] = \"Text\";\n    ResponseContentType[ResponseContentType[\"Json\"] = 1] = \"Json\";\n    ResponseContentType[ResponseContentType[\"ArrayBuffer\"] = 2] = \"ArrayBuffer\";\n    ResponseContentType[ResponseContentType[\"Blob\"] = 3] = \"Blob\";\n})(ResponseContentType || (ResponseContentType = {}));\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Polyfill for [Headers](https://developer.mozilla.org/en-US/docs/Web/API/Headers/Headers), as\n * specified in the [Fetch Spec](https://fetch.spec.whatwg.org/#headers-class).\n *\n * The only known difference between this `Headers` implementation and the spec is the\n * lack of an `entries` method.\n *\n * @usageNotes\n * ### Example\n *\n * ```\n * import {Headers} from '@angular/http';\n *\n * var firstHeaders = new Headers();\n * firstHeaders.append('Content-Type', 'image/jpeg');\n * console.log(firstHeaders.get('Content-Type')) //'image/jpeg'\n *\n * // Create headers from Plain Old JavaScript Object\n * var secondHeaders = new Headers({\n *   'X-My-Custom-Header': 'Angular'\n * });\n * console.log(secondHeaders.get('X-My-Custom-Header')); //'Angular'\n *\n * var thirdHeaders = new Headers(secondHeaders);\n * console.log(thirdHeaders.get('X-My-Custom-Header')); //'Angular'\n * ```\n *\n * @deprecated see https://angular.io/guide/http\n */\nvar Headers = /** @class */ (function () {\n    // TODO(vicb): any -> string|string[]\n    function Headers(headers) {\n        var _this = this;\n        /** @internal header names are lower case */\n        this._headers = new Map();\n        /** @internal map lower case names to actual names */\n        this._normalizedNames = new Map();\n        if (!headers) {\n            return;\n        }\n        if (headers instanceof Headers) {\n            headers.forEach(function (values, name) {\n                values.forEach(function (value) { return _this.append(name, value); });\n            });\n            return;\n        }\n        Object.keys(headers).forEach(function (name) {\n            var values = Array.isArray(headers[name]) ? headers[name] : [headers[name]];\n            _this.delete(name);\n            values.forEach(function (value) { return _this.append(name, value); });\n        });\n    }\n    /**\n     * Returns a new Headers instance from the given DOMString of Response Headers\n     */\n    Headers.fromResponseHeaderString = function (headersString) {\n        var headers = new Headers();\n        headersString.split('\\n').forEach(function (line) {\n            var index = line.indexOf(':');\n            if (index > 0) {\n                var name_1 = line.slice(0, index);\n                var value = line.slice(index + 1).trim();\n                headers.set(name_1, value);\n            }\n        });\n        return headers;\n    };\n    /**\n     * Appends a header to existing list of header values for a given header name.\n     */\n    Headers.prototype.append = function (name, value) {\n        var values = this.getAll(name);\n        if (values === null) {\n            this.set(name, value);\n        }\n        else {\n            values.push(value);\n        }\n    };\n    /**\n     * Deletes all header values for the given name.\n     */\n    Headers.prototype.delete = function (name) {\n        var lcName = name.toLowerCase();\n        this._normalizedNames.delete(lcName);\n        this._headers.delete(lcName);\n    };\n    Headers.prototype.forEach = function (fn) {\n        var _this = this;\n        this._headers.forEach(function (values, lcName) { return fn(values, _this._normalizedNames.get(lcName), _this._headers); });\n    };\n    /**\n     * Returns first header that matches given name.\n     */\n    Headers.prototype.get = function (name) {\n        var values = this.getAll(name);\n        if (values === null) {\n            return null;\n        }\n        return values.length > 0 ? values[0] : null;\n    };\n    /**\n     * Checks for existence of header by given name.\n     */\n    Headers.prototype.has = function (name) { return this._headers.has(name.toLowerCase()); };\n    /**\n     * Returns the names of the headers\n     */\n    Headers.prototype.keys = function () { return Array.from(this._normalizedNames.values()); };\n    /**\n     * Sets or overrides header value for given name.\n     */\n    Headers.prototype.set = function (name, value) {\n        if (Array.isArray(value)) {\n            if (value.length) {\n                this._headers.set(name.toLowerCase(), [value.join(',')]);\n            }\n        }\n        else {\n            this._headers.set(name.toLowerCase(), [value]);\n        }\n        this.mayBeSetNormalizedName(name);\n    };\n    /**\n     * Returns values of all headers.\n     */\n    Headers.prototype.values = function () { return Array.from(this._headers.values()); };\n    /**\n     * Returns string of all headers.\n     */\n    // TODO(vicb): returns {[name: string]: string[]}\n    Headers.prototype.toJSON = function () {\n        var _this = this;\n        var serialized = {};\n        this._headers.forEach(function (values, name) {\n            var split = [];\n            values.forEach(function (v) { return split.push.apply(split, __spread(v.split(','))); });\n            serialized[_this._normalizedNames.get(name)] = split;\n        });\n        return serialized;\n    };\n    /**\n     * Returns list of header values for a given name.\n     */\n    Headers.prototype.getAll = function (name) {\n        return this.has(name) ? this._headers.get(name.toLowerCase()) || null : null;\n    };\n    /**\n     * This method is not implemented.\n     */\n    Headers.prototype.entries = function () { throw new Error('\"entries\" method is not implemented on Headers class'); };\n    Headers.prototype.mayBeSetNormalizedName = function (name) {\n        var lcName = name.toLowerCase();\n        if (!this._normalizedNames.has(lcName)) {\n            this._normalizedNames.set(lcName, name);\n        }\n    };\n    return Headers;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Creates a response options object to be optionally provided when instantiating a\n * {@link Response}.\n *\n * This class is based on the `ResponseInit` description in the [Fetch\n * Spec](https://fetch.spec.whatwg.org/#responseinit).\n *\n * All values are null by default. Typical defaults can be found in the\n * {@link BaseResponseOptions} class, which sub-classes `ResponseOptions`.\n *\n * This class may be used in tests to build {@link Response Responses} for\n * mock responses (see {@link MockBackend}).\n *\n * @usageNotes\n * ### Example\n *\n * ```typescript\n * import {ResponseOptions, Response} from '@angular/http';\n *\n * var options = new ResponseOptions({\n *   body: '{\"name\":\"Jeff\"}'\n * });\n * var res = new Response(options);\n *\n * console.log('res.json():', res.json()); // Object {name: \"Jeff\"}\n * ```\n *\n * @deprecated see https://angular.io/guide/http\n */\nvar ResponseOptions = /** @class */ (function () {\n    function ResponseOptions(opts) {\n        if (opts === void 0) { opts = {}; }\n        var body = opts.body, status = opts.status, headers = opts.headers, statusText = opts.statusText, type = opts.type, url = opts.url;\n        this.body = body != null ? body : null;\n        this.status = status != null ? status : null;\n        this.headers = headers != null ? headers : null;\n        this.statusText = statusText != null ? statusText : null;\n        this.type = type != null ? type : null;\n        this.url = url != null ? url : null;\n    }\n    /**\n     * Creates a copy of the `ResponseOptions` instance, using the optional input as values to\n     * override\n     * existing values. This method will not change the values of the instance on which it is being\n     * called.\n     *\n     * This may be useful when sharing a base `ResponseOptions` object inside tests,\n     * where certain properties may change from test to test.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import {ResponseOptions, Response} from '@angular/http';\n     *\n     * var options = new ResponseOptions({\n     *   body: {name: 'Jeff'}\n     * });\n     * var res = new Response(options.merge({\n     *   url: 'https://google.com'\n     * }));\n     * console.log('options.url:', options.url); // null\n     * console.log('res.json():', res.json()); // Object {name: \"Jeff\"}\n     * console.log('res.url:', res.url); // https://google.com\n     * ```\n     */\n    ResponseOptions.prototype.merge = function (options) {\n        return new ResponseOptions({\n            body: options && options.body != null ? options.body : this.body,\n            status: options && options.status != null ? options.status : this.status,\n            headers: options && options.headers != null ? options.headers : this.headers,\n            statusText: options && options.statusText != null ? options.statusText : this.statusText,\n            type: options && options.type != null ? options.type : this.type,\n            url: options && options.url != null ? options.url : this.url,\n        });\n    };\n    return ResponseOptions;\n}());\n/**\n * Subclass of {@link ResponseOptions}, with default values.\n *\n * Default values:\n *  * status: 200\n *  * headers: empty {@link Headers} object\n *\n * This class could be extended and bound to the {@link ResponseOptions} class\n * when configuring an {@link Injector}, in order to override the default options\n * used by {@link Http} to create {@link Response Responses}.\n *\n * @usageNotes\n * ### Example\n *\n * ```typescript\n * import {provide} from '@angular/core';\n * import {bootstrap} from '@angular/platform-browser/browser';\n * import {HTTP_PROVIDERS, Headers, Http, BaseResponseOptions, ResponseOptions} from\n * '@angular/http';\n * import {App} from './myapp';\n *\n * class MyOptions extends BaseResponseOptions {\n *   headers:Headers = new Headers({network: 'github'});\n * }\n *\n * bootstrap(App, [HTTP_PROVIDERS, {provide: ResponseOptions, useClass: MyOptions}]);\n * ```\n *\n * The options could also be extended when manually creating a {@link Response}\n * object.\n *\n * ### Example\n *\n * ```\n * import {BaseResponseOptions, Response} from '@angular/http';\n *\n * var options = new BaseResponseOptions();\n * var res = new Response(options.merge({\n *   body: 'Angular',\n *   headers: new Headers({framework: 'angular'})\n * }));\n * console.log('res.headers.get(\"framework\"):', res.headers.get('framework')); // angular\n * console.log('res.text():', res.text()); // Angular;\n * ```\n *\n * @deprecated see https://angular.io/guide/http\n */\nvar BaseResponseOptions = /** @class */ (function (_super) {\n    __extends(BaseResponseOptions, _super);\n    function BaseResponseOptions() {\n        return _super.call(this, { status: 200, statusText: 'Ok', type: ResponseType.Default, headers: new Headers() }) || this;\n    }\n    BaseResponseOptions = __decorate([\n        Injectable(),\n        __metadata(\"design:paramtypes\", [])\n    ], BaseResponseOptions);\n    return BaseResponseOptions;\n}(ResponseOptions));\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Abstract class from which real backends are derived.\n *\n * The primary purpose of a `ConnectionBackend` is to create new connections to fulfill a given\n * {@link Request}.\n *\n * @deprecated see https://angular.io/guide/http\n */\nvar ConnectionBackend = /** @class */ (function () {\n    function ConnectionBackend() {\n    }\n    return ConnectionBackend;\n}());\n/**\n * Abstract class from which real connections are derived.\n *\n * @deprecated see https://angular.io/guide/http\n */\nvar Connection = /** @class */ (function () {\n    function Connection() {\n    }\n    return Connection;\n}());\n/**\n * An XSRFStrategy configures XSRF protection (e.g. via headers) on an HTTP request.\n *\n * @deprecated see https://angular.io/guide/http\n */\nvar XSRFStrategy = /** @class */ (function () {\n    function XSRFStrategy() {\n    }\n    return XSRFStrategy;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction normalizeMethodName(method) {\n    if (typeof method !== 'string')\n        return method;\n    switch (method.toUpperCase()) {\n        case 'GET':\n            return RequestMethod.Get;\n        case 'POST':\n            return RequestMethod.Post;\n        case 'PUT':\n            return RequestMethod.Put;\n        case 'DELETE':\n            return RequestMethod.Delete;\n        case 'OPTIONS':\n            return RequestMethod.Options;\n        case 'HEAD':\n            return RequestMethod.Head;\n        case 'PATCH':\n            return RequestMethod.Patch;\n    }\n    throw new Error(\"Invalid request method. The method \\\"\" + method + \"\\\" is not supported.\");\n}\nvar isSuccess = function (status) { return (status >= 200 && status < 300); };\nfunction getResponseURL(xhr) {\n    if ('responseURL' in xhr) {\n        return xhr.responseURL;\n    }\n    if (/^X-Request-URL:/m.test(xhr.getAllResponseHeaders())) {\n        return xhr.getResponseHeader('X-Request-URL');\n    }\n    return null;\n}\nfunction stringToArrayBuffer(input) {\n    var view = new Uint16Array(input.length);\n    for (var i = 0, strLen = input.length; i < strLen; i++) {\n        view[i] = input.charCodeAt(i);\n    }\n    return view.buffer;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction paramParser(rawParams) {\n    if (rawParams === void 0) { rawParams = ''; }\n    var map = new Map();\n    if (rawParams.length > 0) {\n        var params = rawParams.split('&');\n        params.forEach(function (param) {\n            var eqIdx = param.indexOf('=');\n            var _a = __read(eqIdx == -1 ? [param, ''] : [param.slice(0, eqIdx), param.slice(eqIdx + 1)], 2), key = _a[0], val = _a[1];\n            var list = map.get(key) || [];\n            list.push(val);\n            map.set(key, list);\n        });\n    }\n    return map;\n}\n/**\n * @deprecated see https://angular.io/guide/http\n **/\nvar QueryEncoder = /** @class */ (function () {\n    function QueryEncoder() {\n    }\n    QueryEncoder.prototype.encodeKey = function (key) { return standardEncoding(key); };\n    QueryEncoder.prototype.encodeValue = function (value) { return standardEncoding(value); };\n    return QueryEncoder;\n}());\nfunction standardEncoding(v) {\n    return encodeURIComponent(v)\n        .replace(/%40/gi, '@')\n        .replace(/%3A/gi, ':')\n        .replace(/%24/gi, '$')\n        .replace(/%2C/gi, ',')\n        .replace(/%3B/gi, ';')\n        .replace(/%2B/gi, '+')\n        .replace(/%3D/gi, '=')\n        .replace(/%3F/gi, '?')\n        .replace(/%2F/gi, '/');\n}\n/**\n * Map-like representation of url search parameters, based on\n * [URLSearchParams](https://url.spec.whatwg.org/#urlsearchparams) in the url living standard,\n * with several extensions for merging URLSearchParams objects:\n *   - setAll()\n *   - appendAll()\n *   - replaceAll()\n *\n * This class accepts an optional second parameter of ${@link QueryEncoder},\n * which is used to serialize parameters before making a request. By default,\n * `QueryEncoder` encodes keys and values of parameters using `encodeURIComponent`,\n * and then un-encodes certain characters that are allowed to be part of the query\n * according to IETF RFC 3986: https://tools.ietf.org/html/rfc3986.\n *\n * These are the characters that are not encoded: `! $ \\' ( ) * + , ; A 9 - . _ ~ ? /`\n *\n * If the set of allowed query characters is not acceptable for a particular backend,\n * `QueryEncoder` can be subclassed and provided as the 2nd argument to URLSearchParams.\n *\n * ```\n * import {URLSearchParams, QueryEncoder} from '@angular/http';\n * class MyQueryEncoder extends QueryEncoder {\n *   encodeKey(k: string): string {\n *     return myEncodingFunction(k);\n *   }\n *\n *   encodeValue(v: string): string {\n *     return myEncodingFunction(v);\n *   }\n * }\n *\n * let params = new URLSearchParams('', new MyQueryEncoder());\n * ```\n * @deprecated see https://angular.io/guide/http\n */\nvar URLSearchParams = /** @class */ (function () {\n    function URLSearchParams(rawParams, queryEncoder) {\n        if (rawParams === void 0) { rawParams = ''; }\n        if (queryEncoder === void 0) { queryEncoder = new QueryEncoder(); }\n        this.rawParams = rawParams;\n        this.queryEncoder = queryEncoder;\n        this.paramsMap = paramParser(rawParams);\n    }\n    URLSearchParams.prototype.clone = function () {\n        var clone = new URLSearchParams('', this.queryEncoder);\n        clone.appendAll(this);\n        return clone;\n    };\n    URLSearchParams.prototype.has = function (param) { return this.paramsMap.has(param); };\n    URLSearchParams.prototype.get = function (param) {\n        var storedParam = this.paramsMap.get(param);\n        return Array.isArray(storedParam) ? storedParam[0] : null;\n    };\n    URLSearchParams.prototype.getAll = function (param) { return this.paramsMap.get(param) || []; };\n    URLSearchParams.prototype.set = function (param, val) {\n        if (val === void 0 || val === null) {\n            this.delete(param);\n            return;\n        }\n        var list = this.paramsMap.get(param) || [];\n        list.length = 0;\n        list.push(val);\n        this.paramsMap.set(param, list);\n    };\n    // A merge operation\n    // For each name-values pair in `searchParams`, perform `set(name, values[0])`\n    //\n    // E.g: \"a=[1,2,3], c=[8]\" + \"a=[4,5,6], b=[7]\" = \"a=[4], c=[8], b=[7]\"\n    //\n    // TODO(@caitp): document this better\n    URLSearchParams.prototype.setAll = function (searchParams) {\n        var _this = this;\n        searchParams.paramsMap.forEach(function (value, param) {\n            var list = _this.paramsMap.get(param) || [];\n            list.length = 0;\n            list.push(value[0]);\n            _this.paramsMap.set(param, list);\n        });\n    };\n    URLSearchParams.prototype.append = function (param, val) {\n        if (val === void 0 || val === null)\n            return;\n        var list = this.paramsMap.get(param) || [];\n        list.push(val);\n        this.paramsMap.set(param, list);\n    };\n    // A merge operation\n    // For each name-values pair in `searchParams`, perform `append(name, value)`\n    // for each value in `values`.\n    //\n    // E.g: \"a=[1,2], c=[8]\" + \"a=[3,4], b=[7]\" = \"a=[1,2,3,4], c=[8], b=[7]\"\n    //\n    // TODO(@caitp): document this better\n    URLSearchParams.prototype.appendAll = function (searchParams) {\n        var _this = this;\n        searchParams.paramsMap.forEach(function (value, param) {\n            var list = _this.paramsMap.get(param) || [];\n            for (var i = 0; i < value.length; ++i) {\n                list.push(value[i]);\n            }\n            _this.paramsMap.set(param, list);\n        });\n    };\n    // A merge operation\n    // For each name-values pair in `searchParams`, perform `delete(name)`,\n    // followed by `set(name, values)`\n    //\n    // E.g: \"a=[1,2,3], c=[8]\" + \"a=[4,5,6], b=[7]\" = \"a=[4,5,6], c=[8], b=[7]\"\n    //\n    // TODO(@caitp): document this better\n    URLSearchParams.prototype.replaceAll = function (searchParams) {\n        var _this = this;\n        searchParams.paramsMap.forEach(function (value, param) {\n            var list = _this.paramsMap.get(param) || [];\n            list.length = 0;\n            for (var i = 0; i < value.length; ++i) {\n                list.push(value[i]);\n            }\n            _this.paramsMap.set(param, list);\n        });\n    };\n    URLSearchParams.prototype.toString = function () {\n        var _this = this;\n        var paramsList = [];\n        this.paramsMap.forEach(function (values, k) {\n            values.forEach(function (v) { return paramsList.push(_this.queryEncoder.encodeKey(k) + '=' + _this.queryEncoder.encodeValue(v)); });\n        });\n        return paramsList.join('&');\n    };\n    URLSearchParams.prototype.delete = function (param) { this.paramsMap.delete(param); };\n    return URLSearchParams;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * HTTP request body used by both {@link Request} and {@link Response}\n * https://fetch.spec.whatwg.org/#body\n */\nvar Body = /** @class */ (function () {\n    function Body() {\n    }\n    /**\n     * Attempts to return body as parsed `JSON` object, or raises an exception.\n     */\n    Body.prototype.json = function () {\n        if (typeof this._body === 'string') {\n            return JSON.parse(this._body);\n        }\n        if (this._body instanceof ArrayBuffer) {\n            return JSON.parse(this.text());\n        }\n        return this._body;\n    };\n    /**\n     * Returns the body as a string, presuming `toString()` can be called on the response body.\n     *\n     * When decoding an `ArrayBuffer`, the optional `encodingHint` parameter determines how the\n     * bytes in the buffer will be interpreted. Valid values are:\n     *\n     * - `legacy` - incorrectly interpret the bytes as UTF-16 (technically, UCS-2). Only characters\n     *   in the Basic Multilingual Plane are supported, surrogate pairs are not handled correctly.\n     *   In addition, the endianness of the 16-bit octet pairs in the `ArrayBuffer` is not taken\n     *   into consideration. This is the default behavior to avoid breaking apps, but should be\n     *   considered deprecated.\n     *\n     * - `iso-8859` - interpret the bytes as ISO-8859 (which can be used for ASCII encoded text).\n     */\n    Body.prototype.text = function (encodingHint) {\n        if (encodingHint === void 0) { encodingHint = 'legacy'; }\n        if (this._body instanceof URLSearchParams) {\n            return this._body.toString();\n        }\n        if (this._body instanceof ArrayBuffer) {\n            switch (encodingHint) {\n                case 'legacy':\n                    return String.fromCharCode.apply(null, new Uint16Array(this._body));\n                case 'iso-8859':\n                    return String.fromCharCode.apply(null, new Uint8Array(this._body));\n                default:\n                    throw new Error(\"Invalid value for encodingHint: \" + encodingHint);\n            }\n        }\n        if (this._body == null) {\n            return '';\n        }\n        if (typeof this._body === 'object') {\n            return JSON.stringify(this._body, null, 2);\n        }\n        return this._body.toString();\n    };\n    /**\n     * Return the body as an ArrayBuffer\n     */\n    Body.prototype.arrayBuffer = function () {\n        if (this._body instanceof ArrayBuffer) {\n            return this._body;\n        }\n        return stringToArrayBuffer(this.text());\n    };\n    /**\n      * Returns the request's body as a Blob, assuming that body exists.\n      */\n    Body.prototype.blob = function () {\n        if (this._body instanceof Blob) {\n            return this._body;\n        }\n        if (this._body instanceof ArrayBuffer) {\n            return new Blob([this._body]);\n        }\n        throw new Error('The request body isn\\'t either a blob or an array buffer');\n    };\n    return Body;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Creates `Response` instances from provided values.\n *\n * Though this object isn't\n * usually instantiated by end-users, it is the primary object interacted with when it comes time to\n * add data to a view.\n *\n * @usageNotes\n * ### Example\n *\n * ```\n * http.request('my-friends.txt').subscribe(response => this.friends = response.text());\n * ```\n *\n * The Response's interface is inspired by the Response constructor defined in the [Fetch\n * Spec](https://fetch.spec.whatwg.org/#response-class), but is considered a static value whose body\n * can be accessed many times. There are other differences in the implementation, but this is the\n * most significant.\n *\n * @deprecated see https://angular.io/guide/http\n */\nvar Response = /** @class */ (function (_super) {\n    __extends(Response, _super);\n    function Response(responseOptions) {\n        var _this = _super.call(this) || this;\n        _this._body = responseOptions.body;\n        _this.status = responseOptions.status;\n        _this.ok = (_this.status >= 200 && _this.status <= 299);\n        _this.statusText = responseOptions.statusText;\n        _this.headers = responseOptions.headers;\n        _this.type = responseOptions.type;\n        _this.url = responseOptions.url;\n        return _this;\n    }\n    Response.prototype.toString = function () {\n        return \"Response with status: \" + this.status + \" \" + this.statusText + \" for URL: \" + this.url;\n    };\n    return Response;\n}(Body));\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _nextRequestId = 0;\nvar JSONP_HOME = '__ng_jsonp__';\nvar _jsonpConnections = null;\nfunction _getJsonpConnections() {\n    var w = typeof window == 'object' ? window : {};\n    if (_jsonpConnections === null) {\n        _jsonpConnections = w[JSONP_HOME] = {};\n    }\n    return _jsonpConnections;\n}\n// Make sure not to evaluate this in a non-browser environment!\nvar BrowserJsonp = /** @class */ (function () {\n    function BrowserJsonp() {\n    }\n    // Construct a <script> element with the specified URL\n    BrowserJsonp.prototype.build = function (url) {\n        var node = document.createElement('script');\n        node.src = url;\n        return node;\n    };\n    BrowserJsonp.prototype.nextRequestID = function () { return \"__req\" + _nextRequestId++; };\n    BrowserJsonp.prototype.requestCallback = function (id) { return JSONP_HOME + \".\" + id + \".finished\"; };\n    BrowserJsonp.prototype.exposeConnection = function (id, connection) {\n        var connections = _getJsonpConnections();\n        connections[id] = connection;\n    };\n    BrowserJsonp.prototype.removeConnection = function (id) {\n        var connections = _getJsonpConnections();\n        connections[id] = null;\n    };\n    // Attach the <script> element to the DOM\n    BrowserJsonp.prototype.send = function (node) { document.body.appendChild((node)); };\n    // Remove <script> element from the DOM\n    BrowserJsonp.prototype.cleanup = function (node) {\n        if (node.parentNode) {\n            node.parentNode.removeChild((node));\n        }\n    };\n    BrowserJsonp = __decorate([\n        Injectable()\n    ], BrowserJsonp);\n    return BrowserJsonp;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar JSONP_ERR_NO_CALLBACK = 'JSONP injected script did not invoke callback.';\nvar JSONP_ERR_WRONG_METHOD = 'JSONP requests must use GET request method.';\n/**\n * Base class for an in-flight JSONP request.\n *\n * @deprecated see https://angular.io/guide/http\n */\nvar JSONPConnection = /** @class */ (function () {\n    /** @internal */\n    function JSONPConnection(req, _dom, baseResponseOptions) {\n        var _this = this;\n        this._dom = _dom;\n        this.baseResponseOptions = baseResponseOptions;\n        this._finished = false;\n        if (req.method !== RequestMethod.Get) {\n            throw new TypeError(JSONP_ERR_WRONG_METHOD);\n        }\n        this.request = req;\n        this.response = new Observable(function (responseObserver) {\n            _this.readyState = ReadyState.Loading;\n            var id = _this._id = _dom.nextRequestID();\n            _dom.exposeConnection(id, _this);\n            // Workaround Dart\n            // url = url.replace(/=JSONP_CALLBACK(&|$)/, `generated method`);\n            var callback = _dom.requestCallback(_this._id);\n            var url = req.url;\n            if (url.indexOf('=JSONP_CALLBACK&') > -1) {\n                url = url.replace('=JSONP_CALLBACK&', \"=\" + callback + \"&\");\n            }\n            else if (url.lastIndexOf('=JSONP_CALLBACK') === url.length - '=JSONP_CALLBACK'.length) {\n                url = url.substring(0, url.length - '=JSONP_CALLBACK'.length) + (\"=\" + callback);\n            }\n            var script = _this._script = _dom.build(url);\n            var onLoad = function (event) {\n                if (_this.readyState === ReadyState.Cancelled)\n                    return;\n                _this.readyState = ReadyState.Done;\n                _dom.cleanup(script);\n                if (!_this._finished) {\n                    var responseOptions_1 = new ResponseOptions({ body: JSONP_ERR_NO_CALLBACK, type: ResponseType.Error, url: url });\n                    if (baseResponseOptions) {\n                        responseOptions_1 = baseResponseOptions.merge(responseOptions_1);\n                    }\n                    responseObserver.error(new Response(responseOptions_1));\n                    return;\n                }\n                var responseOptions = new ResponseOptions({ body: _this._responseData, url: url });\n                if (_this.baseResponseOptions) {\n                    responseOptions = _this.baseResponseOptions.merge(responseOptions);\n                }\n                responseObserver.next(new Response(responseOptions));\n                responseObserver.complete();\n            };\n            var onError = function (error) {\n                if (_this.readyState === ReadyState.Cancelled)\n                    return;\n                _this.readyState = ReadyState.Done;\n                _dom.cleanup(script);\n                var responseOptions = new ResponseOptions({ body: error.message, type: ResponseType.Error });\n                if (baseResponseOptions) {\n                    responseOptions = baseResponseOptions.merge(responseOptions);\n                }\n                responseObserver.error(new Response(responseOptions));\n            };\n            script.addEventListener('load', onLoad);\n            script.addEventListener('error', onError);\n            _dom.send(script);\n            return function () {\n                _this.readyState = ReadyState.Cancelled;\n                script.removeEventListener('load', onLoad);\n                script.removeEventListener('error', onError);\n                _this._dom.cleanup(script);\n            };\n        });\n    }\n    /**\n     * Callback called when the JSONP request completes, to notify the application\n     * of the new data.\n     */\n    JSONPConnection.prototype.finished = function (data) {\n        // Don't leak connections\n        this._finished = true;\n        this._dom.removeConnection(this._id);\n        if (this.readyState === ReadyState.Cancelled)\n            return;\n        this._responseData = data;\n    };\n    return JSONPConnection;\n}());\n/**\n * A {@link ConnectionBackend} that uses the JSONP strategy of making requests.\n *\n * @deprecated see https://angular.io/guide/http\n */\nvar JSONPBackend = /** @class */ (function (_super) {\n    __extends(JSONPBackend, _super);\n    /** @internal */\n    function JSONPBackend(_browserJSONP, _baseResponseOptions) {\n        var _this = _super.call(this) || this;\n        _this._browserJSONP = _browserJSONP;\n        _this._baseResponseOptions = _baseResponseOptions;\n        return _this;\n    }\n    JSONPBackend.prototype.createConnection = function (request) {\n        return new JSONPConnection(request, this._browserJSONP, this._baseResponseOptions);\n    };\n    JSONPBackend = __decorate([\n        Injectable(),\n        __metadata(\"design:paramtypes\", [BrowserJsonp, ResponseOptions])\n    ], JSONPBackend);\n    return JSONPBackend;\n}(ConnectionBackend));\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar XSSI_PREFIX = /^\\)\\]\\}',?\\n/;\n/**\n * Creates connections using `XMLHttpRequest`. Given a fully-qualified\n * request, an `XHRConnection` will immediately create an `XMLHttpRequest` object and send the\n * request.\n *\n * This class would typically not be created or interacted with directly inside applications, though\n * the {@link MockConnection} may be interacted with in tests.\n *\n * @deprecated see https://angular.io/guide/http\n */\nvar XHRConnection = /** @class */ (function () {\n    function XHRConnection(req, browserXHR, baseResponseOptions) {\n        var _this = this;\n        this.request = req;\n        this.response = new Observable(function (responseObserver) {\n            var _xhr = browserXHR.build();\n            _xhr.open(RequestMethod[req.method].toUpperCase(), req.url);\n            if (req.withCredentials != null) {\n                _xhr.withCredentials = req.withCredentials;\n            }\n            // load event handler\n            var onLoad = function () {\n                // normalize IE9 bug (http://bugs.jquery.com/ticket/1450)\n                var status = _xhr.status === 1223 ? 204 : _xhr.status;\n                var body = null;\n                // HTTP 204 means no content\n                if (status !== 204) {\n                    // responseText is the old-school way of retrieving response (supported by IE8 & 9)\n                    // response/responseType properties were introduced in ResourceLoader Level2 spec\n                    // (supported by IE10)\n                    body = (typeof _xhr.response === 'undefined') ? _xhr.responseText : _xhr.response;\n                    // Implicitly strip a potential XSSI prefix.\n                    if (typeof body === 'string') {\n                        body = body.replace(XSSI_PREFIX, '');\n                    }\n                }\n                // fix status code when it is 0 (0 status is undocumented).\n                // Occurs when accessing file resources or on Android 4.1 stock browser\n                // while retrieving files from application cache.\n                if (status === 0) {\n                    status = body ? 200 : 0;\n                }\n                var headers = Headers.fromResponseHeaderString(_xhr.getAllResponseHeaders());\n                // IE 9 does not provide the way to get URL of response\n                var url = getResponseURL(_xhr) || req.url;\n                var statusText = _xhr.statusText || 'OK';\n                var responseOptions = new ResponseOptions({ body: body, status: status, headers: headers, statusText: statusText, url: url });\n                if (baseResponseOptions != null) {\n                    responseOptions = baseResponseOptions.merge(responseOptions);\n                }\n                var response = new Response(responseOptions);\n                response.ok = isSuccess(status);\n                if (response.ok) {\n                    responseObserver.next(response);\n                    // TODO(gdi2290): defer complete if array buffer until done\n                    responseObserver.complete();\n                    return;\n                }\n                responseObserver.error(response);\n            };\n            // error event handler\n            var onError = function (err) {\n                var responseOptions = new ResponseOptions({\n                    body: err,\n                    type: ResponseType.Error,\n                    status: _xhr.status,\n                    statusText: _xhr.statusText,\n                });\n                if (baseResponseOptions != null) {\n                    responseOptions = baseResponseOptions.merge(responseOptions);\n                }\n                responseObserver.error(new Response(responseOptions));\n            };\n            _this.setDetectedContentType(req, _xhr);\n            if (req.headers == null) {\n                req.headers = new Headers();\n            }\n            if (!req.headers.has('Accept')) {\n                req.headers.append('Accept', 'application/json, text/plain, */*');\n            }\n            req.headers.forEach(function (values, name) { return _xhr.setRequestHeader(name, values.join(',')); });\n            // Select the correct buffer type to store the response\n            if (req.responseType != null && _xhr.responseType != null) {\n                switch (req.responseType) {\n                    case ResponseContentType.ArrayBuffer:\n                        _xhr.responseType = 'arraybuffer';\n                        break;\n                    case ResponseContentType.Json:\n                        _xhr.responseType = 'json';\n                        break;\n                    case ResponseContentType.Text:\n                        _xhr.responseType = 'text';\n                        break;\n                    case ResponseContentType.Blob:\n                        _xhr.responseType = 'blob';\n                        break;\n                    default:\n                        throw new Error('The selected responseType is not supported');\n                }\n            }\n            _xhr.addEventListener('load', onLoad);\n            _xhr.addEventListener('error', onError);\n            _xhr.send(_this.request.getBody());\n            return function () {\n                _xhr.removeEventListener('load', onLoad);\n                _xhr.removeEventListener('error', onError);\n                _xhr.abort();\n            };\n        });\n    }\n    XHRConnection.prototype.setDetectedContentType = function (req /** TODO Request */, _xhr /** XMLHttpRequest */) {\n        // Skip if a custom Content-Type header is provided\n        if (req.headers != null && req.headers.get('Content-Type') != null) {\n            return;\n        }\n        // Set the detected content type\n        switch (req.contentType) {\n            case ContentType.NONE:\n                break;\n            case ContentType.JSON:\n                _xhr.setRequestHeader('content-type', 'application/json');\n                break;\n            case ContentType.FORM:\n                _xhr.setRequestHeader('content-type', 'application/x-www-form-urlencoded;charset=UTF-8');\n                break;\n            case ContentType.TEXT:\n                _xhr.setRequestHeader('content-type', 'text/plain');\n                break;\n            case ContentType.BLOB:\n                var blob = req.blob();\n                if (blob.type) {\n                    _xhr.setRequestHeader('content-type', blob.type);\n                }\n                break;\n        }\n    };\n    return XHRConnection;\n}());\n/**\n * `XSRFConfiguration` sets up Cross Site Request Forgery (XSRF) protection for the application\n * using a cookie. See https://www.owasp.org/index.php/Cross-Site_Request_Forgery_(CSRF)\n * for more information on XSRF.\n *\n * Applications can configure custom cookie and header names by binding an instance of this class\n * with different `cookieName` and `headerName` values. See the main HTTP documentation for more\n * details.\n *\n * @deprecated see https://angular.io/guide/http\n */\nvar CookieXSRFStrategy = /** @class */ (function () {\n    function CookieXSRFStrategy(_cookieName, _headerName) {\n        if (_cookieName === void 0) { _cookieName = 'XSRF-TOKEN'; }\n        if (_headerName === void 0) { _headerName = 'X-XSRF-TOKEN'; }\n        this._cookieName = _cookieName;\n        this._headerName = _headerName;\n    }\n    CookieXSRFStrategy.prototype.configureRequest = function (req) {\n        var xsrfToken = ɵgetDOM().getCookie(this._cookieName);\n        if (xsrfToken) {\n            req.headers.set(this._headerName, xsrfToken);\n        }\n    };\n    return CookieXSRFStrategy;\n}());\n/**\n * Creates {@link XHRConnection} instances.\n *\n * This class would typically not be used by end users, but could be\n * overridden if a different backend implementation should be used,\n * such as in a node backend.\n *\n * @usageNotes\n * ### Example\n *\n * ```\n * import {Http, MyNodeBackend, HTTP_PROVIDERS, BaseRequestOptions} from '@angular/http';\n * @Component({\n *   viewProviders: [\n *     HTTP_PROVIDERS,\n *     {provide: Http, useFactory: (backend, options) => {\n *       return new Http(backend, options);\n *     }, deps: [MyNodeBackend, BaseRequestOptions]}]\n * })\n * class MyComponent {\n *   constructor(http:Http) {\n *     http.request('people.json').subscribe(res => this.people = res.json());\n *   }\n * }\n * ```\n * @deprecated see https://angular.io/guide/http\n */\nvar XHRBackend = /** @class */ (function () {\n    function XHRBackend(_browserXHR, _baseResponseOptions, _xsrfStrategy) {\n        this._browserXHR = _browserXHR;\n        this._baseResponseOptions = _baseResponseOptions;\n        this._xsrfStrategy = _xsrfStrategy;\n    }\n    XHRBackend.prototype.createConnection = function (request) {\n        this._xsrfStrategy.configureRequest(request);\n        return new XHRConnection(request, this._browserXHR, this._baseResponseOptions);\n    };\n    XHRBackend = __decorate([\n        Injectable(),\n        __metadata(\"design:paramtypes\", [BrowserXhr, ResponseOptions,\n            XSRFStrategy])\n    ], XHRBackend);\n    return XHRBackend;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Creates a request options object to be optionally provided when instantiating a\n * {@link Request}.\n *\n * This class is based on the `RequestInit` description in the [Fetch\n * Spec](https://fetch.spec.whatwg.org/#requestinit).\n *\n * All values are null by default. Typical defaults can be found in the {@link BaseRequestOptions}\n * class, which sub-classes `RequestOptions`.\n *\n * ```typescript\n * import {RequestOptions, Request, RequestMethod} from '@angular/http';\n *\n * const options = new RequestOptions({\n *   method: RequestMethod.Post,\n *   url: 'https://google.com'\n * });\n * const req = new Request(options);\n * console.log('req.method:', RequestMethod[req.method]); // Post\n * console.log('options.url:', options.url); // https://google.com\n * ```\n *\n * @deprecated see https://angular.io/guide/http\n */\nvar RequestOptions = /** @class */ (function () {\n    // TODO(Dzmitry): remove search when this.search is removed\n    function RequestOptions(opts) {\n        if (opts === void 0) { opts = {}; }\n        var method = opts.method, headers = opts.headers, body = opts.body, url = opts.url, search = opts.search, params = opts.params, withCredentials = opts.withCredentials, responseType = opts.responseType;\n        this.method = method != null ? normalizeMethodName(method) : null;\n        this.headers = headers != null ? headers : null;\n        this.body = body != null ? body : null;\n        this.url = url != null ? url : null;\n        this.params = this._mergeSearchParams(params || search);\n        this.withCredentials = withCredentials != null ? withCredentials : null;\n        this.responseType = responseType != null ? responseType : null;\n    }\n    Object.defineProperty(RequestOptions.prototype, \"search\", {\n        /**\n         * @deprecated from 4.0.0. Use params instead.\n         */\n        get: function () { return this.params; },\n        /**\n         * @deprecated from 4.0.0. Use params instead.\n         */\n        set: function (params) { this.params = params; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Creates a copy of the `RequestOptions` instance, using the optional input as values to override\n     * existing values. This method will not change the values of the instance on which it is being\n     * called.\n     *\n     * Note that `headers` and `search` will override existing values completely if present in\n     * the `options` object. If these values should be merged, it should be done prior to calling\n     * `merge` on the `RequestOptions` instance.\n     *\n     * ```typescript\n     * import {RequestOptions, Request, RequestMethod} from '@angular/http';\n     *\n     * const options = new RequestOptions({\n     *   method: RequestMethod.Post\n     * });\n     * const req = new Request(options.merge({\n     *   url: 'https://google.com'\n     * }));\n     * console.log('req.method:', RequestMethod[req.method]); // Post\n     * console.log('options.url:', options.url); // null\n     * console.log('req.url:', req.url); // https://google.com\n     * ```\n     */\n    RequestOptions.prototype.merge = function (options) {\n        return new RequestOptions({\n            method: options && options.method != null ? options.method : this.method,\n            headers: options && options.headers != null ? options.headers : new Headers(this.headers),\n            body: options && options.body != null ? options.body : this.body,\n            url: options && options.url != null ? options.url : this.url,\n            params: options && this._mergeSearchParams(options.params || options.search),\n            withCredentials: options && options.withCredentials != null ? options.withCredentials :\n                this.withCredentials,\n            responseType: options && options.responseType != null ? options.responseType :\n                this.responseType\n        });\n    };\n    RequestOptions.prototype._mergeSearchParams = function (params) {\n        if (!params)\n            return this.params;\n        if (params instanceof URLSearchParams) {\n            return params.clone();\n        }\n        if (typeof params === 'string') {\n            return new URLSearchParams(params);\n        }\n        return this._parseParams(params);\n    };\n    RequestOptions.prototype._parseParams = function (objParams) {\n        var _this = this;\n        if (objParams === void 0) { objParams = {}; }\n        var params = new URLSearchParams();\n        Object.keys(objParams).forEach(function (key) {\n            var value = objParams[key];\n            if (Array.isArray(value)) {\n                value.forEach(function (item) { return _this._appendParam(key, item, params); });\n            }\n            else {\n                _this._appendParam(key, value, params);\n            }\n        });\n        return params;\n    };\n    RequestOptions.prototype._appendParam = function (key, value, params) {\n        if (typeof value !== 'string') {\n            value = JSON.stringify(value);\n        }\n        params.append(key, value);\n    };\n    return RequestOptions;\n}());\n/**\n * Subclass of {@link RequestOptions}, with default values.\n *\n * Default values:\n *  * method: {@link RequestMethod RequestMethod.Get}\n *  * headers: empty {@link Headers} object\n *\n * This class could be extended and bound to the {@link RequestOptions} class\n * when configuring an {@link Injector}, in order to override the default options\n * used by {@link Http} to create and send {@link Request Requests}.\n *\n * ```typescript\n * import {BaseRequestOptions, RequestOptions} from '@angular/http';\n *\n * class MyOptions extends BaseRequestOptions {\n *   search: string = 'coreTeam=true';\n * }\n *\n * {provide: RequestOptions, useClass: MyOptions};\n * ```\n *\n * The options could also be extended when manually creating a {@link Request}\n * object.\n *\n * ```\n * import {BaseRequestOptions, Request, RequestMethod} from '@angular/http';\n *\n * const options = new BaseRequestOptions();\n * const req = new Request(options.merge({\n *   method: RequestMethod.Post,\n *   url: 'https://google.com'\n * }));\n * console.log('req.method:', RequestMethod[req.method]); // Post\n * console.log('options.url:', options.url); // null\n * console.log('req.url:', req.url); // https://google.com\n * ```\n *\n * @deprecated see https://angular.io/guide/http\n */\nvar BaseRequestOptions = /** @class */ (function (_super) {\n    __extends(BaseRequestOptions, _super);\n    function BaseRequestOptions() {\n        return _super.call(this, { method: RequestMethod.Get, headers: new Headers() }) || this;\n    }\n    BaseRequestOptions = __decorate([\n        Injectable(),\n        __metadata(\"design:paramtypes\", [])\n    ], BaseRequestOptions);\n    return BaseRequestOptions;\n}(RequestOptions));\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// TODO(jeffbcross): properly implement body accessors\n/**\n * Creates `Request` instances from provided values.\n *\n * The Request's interface is inspired by the Request constructor defined in the [Fetch\n * Spec](https://fetch.spec.whatwg.org/#request-class),\n * but is considered a static value whose body can be accessed many times. There are other\n * differences in the implementation, but this is the most significant.\n *\n * `Request` instances are typically created by higher-level classes, like {@link Http} and\n * {@link Jsonp}, but it may occasionally be useful to explicitly create `Request` instances.\n * One such example is when creating services that wrap higher-level services, like {@link Http},\n * where it may be useful to generate a `Request` with arbitrary headers and search params.\n *\n * ```typescript\n * import {Injectable, Injector} from '@angular/core';\n * import {HTTP_PROVIDERS, Http, Request, RequestMethod} from '@angular/http';\n *\n * @Injectable()\n * class AutoAuthenticator {\n *   constructor(public http:Http) {}\n *   request(url:string) {\n *     return this.http.request(new Request({\n *       method: RequestMethod.Get,\n *       url: url,\n *       search: 'password=123'\n *     }));\n *   }\n * }\n *\n * var injector = Injector.resolveAndCreate([HTTP_PROVIDERS, AutoAuthenticator]);\n * var authenticator = injector.get(AutoAuthenticator);\n * authenticator.request('people.json').subscribe(res => {\n *   //URL should have included '?password=123'\n *   console.log('people', res.json());\n * });\n * ```\n *\n * @deprecated see https://angular.io/guide/http\n */\nvar Request = /** @class */ (function (_super) {\n    __extends(Request, _super);\n    function Request(requestOptions) {\n        var _this = _super.call(this) || this;\n        // TODO: assert that url is present\n        var url = requestOptions.url;\n        _this.url = requestOptions.url;\n        var paramsArg = requestOptions.params || requestOptions.search;\n        if (paramsArg) {\n            var params = void 0;\n            if (typeof paramsArg === 'object' && !(paramsArg instanceof URLSearchParams)) {\n                params = urlEncodeParams(paramsArg).toString();\n            }\n            else {\n                params = paramsArg.toString();\n            }\n            if (params.length > 0) {\n                var prefix = '?';\n                if (_this.url.indexOf('?') != -1) {\n                    prefix = (_this.url[_this.url.length - 1] == '&') ? '' : '&';\n                }\n                // TODO: just delete search-query-looking string in url?\n                _this.url = url + prefix + params;\n            }\n        }\n        _this._body = requestOptions.body;\n        _this.method = normalizeMethodName(requestOptions.method);\n        // TODO(jeffbcross): implement behavior\n        // Defaults to 'omit', consistent with browser\n        _this.headers = new Headers(requestOptions.headers);\n        _this.contentType = _this.detectContentType();\n        _this.withCredentials = requestOptions.withCredentials;\n        _this.responseType = requestOptions.responseType;\n        return _this;\n    }\n    /**\n     * Returns the content type enum based on header options.\n     */\n    Request.prototype.detectContentType = function () {\n        switch (this.headers.get('content-type')) {\n            case 'application/json':\n                return ContentType.JSON;\n            case 'application/x-www-form-urlencoded':\n                return ContentType.FORM;\n            case 'multipart/form-data':\n                return ContentType.FORM_DATA;\n            case 'text/plain':\n            case 'text/html':\n                return ContentType.TEXT;\n            case 'application/octet-stream':\n                return this._body instanceof ArrayBuffer$1 ? ContentType.ARRAY_BUFFER : ContentType.BLOB;\n            default:\n                return this.detectContentTypeFromBody();\n        }\n    };\n    /**\n     * Returns the content type of request's body based on its type.\n     */\n    Request.prototype.detectContentTypeFromBody = function () {\n        if (this._body == null) {\n            return ContentType.NONE;\n        }\n        else if (this._body instanceof URLSearchParams) {\n            return ContentType.FORM;\n        }\n        else if (this._body instanceof FormData) {\n            return ContentType.FORM_DATA;\n        }\n        else if (this._body instanceof Blob$1) {\n            return ContentType.BLOB;\n        }\n        else if (this._body instanceof ArrayBuffer$1) {\n            return ContentType.ARRAY_BUFFER;\n        }\n        else if (this._body && typeof this._body === 'object') {\n            return ContentType.JSON;\n        }\n        else {\n            return ContentType.TEXT;\n        }\n    };\n    /**\n     * Returns the request's body according to its type. If body is undefined, return\n     * null.\n     */\n    Request.prototype.getBody = function () {\n        switch (this.contentType) {\n            case ContentType.JSON:\n                return this.text();\n            case ContentType.FORM:\n                return this.text();\n            case ContentType.FORM_DATA:\n                return this._body;\n            case ContentType.TEXT:\n                return this.text();\n            case ContentType.BLOB:\n                return this.blob();\n            case ContentType.ARRAY_BUFFER:\n                return this.arrayBuffer();\n            default:\n                return null;\n        }\n    };\n    return Request;\n}(Body));\nfunction urlEncodeParams(params) {\n    var searchParams = new URLSearchParams();\n    Object.keys(params).forEach(function (key) {\n        var value = params[key];\n        if (value && Array.isArray(value)) {\n            value.forEach(function (element) { return searchParams.append(key, element.toString()); });\n        }\n        else {\n            searchParams.append(key, value.toString());\n        }\n    });\n    return searchParams;\n}\nvar noop = function () { };\nvar w = typeof window == 'object' ? window : noop;\nvar FormData = w /** TODO #9100 */['FormData'] || noop;\nvar Blob$1 = w /** TODO #9100 */['Blob'] || noop;\nvar ArrayBuffer$1 = w /** TODO #9100 */['ArrayBuffer'] || noop;\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction httpRequest(backend, request) {\n    return backend.createConnection(request).response;\n}\nfunction mergeOptions(defaultOpts, providedOpts, method, url) {\n    var newOptions = defaultOpts;\n    if (providedOpts) {\n        // Hack so Dart can used named parameters\n        return newOptions.merge(new RequestOptions({\n            method: providedOpts.method || method,\n            url: providedOpts.url || url,\n            search: providedOpts.search,\n            params: providedOpts.params,\n            headers: providedOpts.headers,\n            body: providedOpts.body,\n            withCredentials: providedOpts.withCredentials,\n            responseType: providedOpts.responseType\n        }));\n    }\n    return newOptions.merge(new RequestOptions({ method: method, url: url }));\n}\n/**\n * Performs http requests using `XMLHttpRequest` as the default backend.\n *\n * `Http` is available as an injectable class, with methods to perform http requests. Calling\n * `request` returns an `Observable` which will emit a single {@link Response} when a\n * response is received.\n *\n * @usageNotes\n * ### Example\n *\n * ```typescript\n * import {Http, HTTP_PROVIDERS} from '@angular/http';\n * import {map} from 'rxjs/operators';\n *\n * @Component({\n *   selector: 'http-app',\n *   viewProviders: [HTTP_PROVIDERS],\n *   templateUrl: 'people.html'\n * })\n * class PeopleComponent {\n *   constructor(http: Http) {\n *     http.get('people.json')\n *       // Call map on the response observable to get the parsed people object\n *       .pipe(map(res => res.json()))\n *       // Subscribe to the observable to get the parsed people object and attach it to the\n *       // component\n *       .subscribe(people => this.people = people);\n *   }\n * }\n * ```\n *\n *\n * ### Example\n *\n * ```\n * http.get('people.json').subscribe((res:Response) => this.people = res.json());\n * ```\n *\n * The default construct used to perform requests, `XMLHttpRequest`, is abstracted as a \"Backend\" (\n * {@link XHRBackend} in this case), which could be mocked with dependency injection by replacing\n * the {@link XHRBackend} provider, as in the following example:\n *\n * ### Example\n *\n * ```typescript\n * import {BaseRequestOptions, Http} from '@angular/http';\n * import {MockBackend} from '@angular/http/testing';\n * var injector = Injector.resolveAndCreate([\n *   BaseRequestOptions,\n *   MockBackend,\n *   {provide: Http, useFactory:\n *       function(backend, defaultOptions) {\n *         return new Http(backend, defaultOptions);\n *       },\n *       deps: [MockBackend, BaseRequestOptions]}\n * ]);\n * var http = injector.get(Http);\n * http.get('request-from-mock-backend.json').subscribe((res:Response) => doSomething(res));\n * ```\n *\n * @deprecated see https://angular.io/guide/http\n */\nvar Http = /** @class */ (function () {\n    function Http(_backend, _defaultOptions) {\n        this._backend = _backend;\n        this._defaultOptions = _defaultOptions;\n    }\n    /**\n     * Performs any type of http request. First argument is required, and can either be a url or\n     * a {@link Request} instance. If the first argument is a url, an optional {@link RequestOptions}\n     * object can be provided as the 2nd argument. The options object will be merged with the values\n     * of {@link BaseRequestOptions} before performing the request.\n     */\n    Http.prototype.request = function (url, options) {\n        var responseObservable;\n        if (typeof url === 'string') {\n            responseObservable = httpRequest(this._backend, new Request(mergeOptions(this._defaultOptions, options, RequestMethod.Get, url)));\n        }\n        else if (url instanceof Request) {\n            responseObservable = httpRequest(this._backend, url);\n        }\n        else {\n            throw new Error('First argument must be a url string or Request instance.');\n        }\n        return responseObservable;\n    };\n    /**\n     * Performs a request with `get` http method.\n     */\n    Http.prototype.get = function (url, options) {\n        return this.request(new Request(mergeOptions(this._defaultOptions, options, RequestMethod.Get, url)));\n    };\n    /**\n     * Performs a request with `post` http method.\n     */\n    Http.prototype.post = function (url, body, options) {\n        return this.request(new Request(mergeOptions(this._defaultOptions.merge(new RequestOptions({ body: body })), options, RequestMethod.Post, url)));\n    };\n    /**\n     * Performs a request with `put` http method.\n     */\n    Http.prototype.put = function (url, body, options) {\n        return this.request(new Request(mergeOptions(this._defaultOptions.merge(new RequestOptions({ body: body })), options, RequestMethod.Put, url)));\n    };\n    /**\n     * Performs a request with `delete` http method.\n     */\n    Http.prototype.delete = function (url, options) {\n        return this.request(new Request(mergeOptions(this._defaultOptions, options, RequestMethod.Delete, url)));\n    };\n    /**\n     * Performs a request with `patch` http method.\n     */\n    Http.prototype.patch = function (url, body, options) {\n        return this.request(new Request(mergeOptions(this._defaultOptions.merge(new RequestOptions({ body: body })), options, RequestMethod.Patch, url)));\n    };\n    /**\n     * Performs a request with `head` http method.\n     */\n    Http.prototype.head = function (url, options) {\n        return this.request(new Request(mergeOptions(this._defaultOptions, options, RequestMethod.Head, url)));\n    };\n    /**\n     * Performs a request with `options` http method.\n     */\n    Http.prototype.options = function (url, options) {\n        return this.request(new Request(mergeOptions(this._defaultOptions, options, RequestMethod.Options, url)));\n    };\n    Http = __decorate([\n        Injectable(),\n        __metadata(\"design:paramtypes\", [ConnectionBackend, RequestOptions])\n    ], Http);\n    return Http;\n}());\n/**\n * @deprecated see https://angular.io/guide/http\n */\nvar Jsonp = /** @class */ (function (_super) {\n    __extends(Jsonp, _super);\n    function Jsonp(backend, defaultOptions) {\n        return _super.call(this, backend, defaultOptions) || this;\n    }\n    /**\n     * Performs any type of http request. First argument is required, and can either be a url or\n     * a {@link Request} instance. If the first argument is a url, an optional {@link RequestOptions}\n     * object can be provided as the 2nd argument. The options object will be merged with the values\n     * of {@link BaseRequestOptions} before performing the request.\n     *\n     * @security Regular XHR is the safest alternative to JSONP for most applications, and is\n     * supported by all current browsers. Because JSONP creates a `<script>` element with\n     * contents retrieved from a remote source, attacker-controlled data introduced by an untrusted\n     * source could expose your application to XSS risks. Data exposed by JSONP may also be\n     * readable by malicious third-party websites. In addition, JSONP introduces potential risk for\n     * future security issues (e.g. content sniffing).  For more detail, see the\n     * [Security Guide](http://g.co/ng/security).\n     */\n    Jsonp.prototype.request = function (url, options) {\n        var responseObservable;\n        if (typeof url === 'string') {\n            url =\n                new Request(mergeOptions(this._defaultOptions, options, RequestMethod.Get, url));\n        }\n        if (url instanceof Request) {\n            if (url.method !== RequestMethod.Get) {\n                throw new Error('JSONP requests must use GET request method.');\n            }\n            responseObservable = httpRequest(this._backend, url);\n        }\n        else {\n            throw new Error('First argument must be a url string or Request instance.');\n        }\n        return responseObservable;\n    };\n    Jsonp = __decorate([\n        Injectable(),\n        __metadata(\"design:paramtypes\", [ConnectionBackend, RequestOptions])\n    ], Jsonp);\n    return Jsonp;\n}(Http));\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction _createDefaultCookieXSRFStrategy() {\n    return new CookieXSRFStrategy();\n}\nfunction httpFactory(xhrBackend, requestOptions) {\n    return new Http(xhrBackend, requestOptions);\n}\nfunction jsonpFactory(jsonpBackend, requestOptions) {\n    return new Jsonp(jsonpBackend, requestOptions);\n}\n/**\n * The module that includes http's providers\n *\n * @deprecated see https://angular.io/guide/http\n */\nvar HttpModule = /** @class */ (function () {\n    function HttpModule() {\n    }\n    HttpModule = __decorate([\n        NgModule({\n            providers: [\n                // TODO(pascal): use factory type annotations once supported in DI\n                // issue: https://github.com/angular/angular/issues/3183\n                { provide: Http, useFactory: httpFactory, deps: [XHRBackend, RequestOptions] },\n                BrowserXhr,\n                { provide: RequestOptions, useClass: BaseRequestOptions },\n                { provide: ResponseOptions, useClass: BaseResponseOptions },\n                XHRBackend,\n                { provide: XSRFStrategy, useFactory: _createDefaultCookieXSRFStrategy },\n            ],\n        })\n    ], HttpModule);\n    return HttpModule;\n}());\n/**\n * The module that includes jsonp's providers\n *\n * @deprecated see https://angular.io/guide/http\n */\nvar JsonpModule = /** @class */ (function () {\n    function JsonpModule() {\n    }\n    JsonpModule = __decorate([\n        NgModule({\n            providers: [\n                // TODO(pascal): use factory type annotations once supported in DI\n                // issue: https://github.com/angular/angular/issues/3183\n                { provide: Jsonp, useFactory: jsonpFactory, deps: [JSONPBackend, RequestOptions] },\n                BrowserJsonp,\n                { provide: RequestOptions, useClass: BaseRequestOptions },\n                { provide: ResponseOptions, useClass: BaseResponseOptions },\n                JSONPBackend,\n            ],\n        })\n    ], JsonpModule);\n    return JsonpModule;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @deprecated see https://angular.io/guide/http\n */\nvar VERSION = new Version('6.1.10');\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// This file only reexports content of the `src` folder. Keep it that way.\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { BrowserJsonp as ɵangular_packages_http_http_e, Body as ɵangular_packages_http_http_f, _createDefaultCookieXSRFStrategy as ɵangular_packages_http_http_a, httpFactory as ɵangular_packages_http_http_b, jsonpFactory as ɵangular_packages_http_http_c, BrowserXhr, JSONPBackend, JSONPConnection, CookieXSRFStrategy, XHRBackend, XHRConnection, BaseRequestOptions, RequestOptions, BaseResponseOptions, ResponseOptions, ReadyState, RequestMethod, ResponseContentType, ResponseType, Headers, Http, Jsonp, HttpModule, JsonpModule, Connection, ConnectionBackend, XSRFStrategy, Request, Response, QueryEncoder, URLSearchParams, VERSION };\n//# sourceMappingURL=http.js.map\n","/**\r\n * Model class of translation object\r\n *\r\n * @export\r\n * @class Translation\r\n */\r\nexport class Translation {\r\n\r\n    /**\r\n     * Language code/abbreviation\r\n     *\r\n     * @private\r\n     * @type {number}\r\n     * @memberof Translation\r\n     */\r\n    private code: number;\r\n\r\n    /**\r\n     * Language as label\r\n     *\r\n     * @private\r\n     * @type {string}\r\n     * @memberof Translation\r\n     */\r\n    private lang: string;\r\n\r\n    /**\r\n     * Text to translate\r\n     *\r\n     * @private\r\n     * @type {string}\r\n     * @memberof Translation\r\n     */\r\n    private text: string;\r\n\r\n    constructor(code: number, lang: string, text: string) {\r\n        this.code = code;\r\n        this.lang = lang;\r\n        this.text = text;\r\n    }\r\n\r\n    public get $code(): number {\r\n        return this.code;\r\n    }\r\n\r\n    public set $code(value: number) {\r\n        this.code = value;\r\n    }\r\n\r\n    public get $lang(): string {\r\n        return this.lang;\r\n    }\r\n\r\n    public set $lang(value: string) {\r\n        this.lang = value;\r\n    }\r\n\r\n    public get $text(): string {\r\n        return this.text;\r\n    }\r\n\r\n    public set $text(value: string) {\r\n        this.text = value;\r\n    }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { HttpUtilsService } from '../utils/http-utils.service';\r\nimport{URL_GLOBAL} from '../global';\r\nimport { concatMap, delay, mergeMap } from 'rxjs/operators';\r\nimport { Observable, from } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class MercadoLibreService {\r\n\t\r\n\thttpOptions = this.httpUtils.getHTTPHeaders();\r\n\r\n\tconstructor(private http: HttpClient,\r\n\t\tprivate httpUtils: HttpUtilsService) {\r\n\r\n\t\t}\r\n\r\n\tpublicarItem(producto){\r\n\t\tconsole.log(producto);\r\n\t\tvar publicar={\r\n\t\t\titem:producto.item,\r\n\t\t\tidproducto:producto.idproducto\r\n\t\t};\r\n\r\n\t\tconst httpHeaders = this.httpUtils.getHTTPHeaders();\r\n\t\treturn this.http.post<any>(URL_GLOBAL+'publicarMec',publicar,{ headers: httpHeaders})\r\n\t}\r\n \r\n\t//publica productos en mercado libre\r\n\tpublicarItem2(producto:any[]){\r\n\t\r\n\t\tconst httpHeaders = this.httpUtils.getHTTPHeaders();\r\n\t\treturn from(producto).pipe(concatMap(producto=>this.http.post<any>(URL_GLOBAL+'publicarMec',{item:producto.item,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tidproducto:producto.idproducto,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tidimportacionproducto:producto.idimportacionproducto},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{ headers: httpHeaders})))\r\n\t}\r\n\tactualizarStock(producto:any[]){\r\n\t\tconst httpHeaders = this.httpUtils.getHTTPHeaders();\r\n\t\treturn from(producto).pipe(mergeMap(producto=>this.http.post<any>(URL_GLOBAL+'actualizarStockMec',{stock:producto._stock,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tidproducto:producto.idproducto},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{ headers: httpHeaders})))\r\n\t}\r\n\r\n\t// public getSomethingFromAnAPI(ids: number[]): any {\r\n\t// \treturn this.from(ids).pipe(\r\n\t// \t   concatMap(id => <Observable<any>> this.http.get('https://jsonplaceholder.typicode.com/posts/' + id))\r\n\t// \t   ); \r\n\t//   }\r\n\t// from(ids2){\r\n\t// \tlet ids = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\r\n\t// \treturn this.getSomethingFromAnAPI(ids).subscribe(response => {\r\n\t// \t this.data.push({\r\n\t// \t  body: response.body, \r\n\t// \t  title: response.title, \r\n\t// \t  id: response.id\r\n\t// \t });\r\n\t// \t}, error => {\r\n\t// \t console.error(error);\r\n\t// \t});\r\n\r\n\t// }\r\n\r\n\t\r\n\r\n}\r\n\r\n\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpParams, HttpHeaders,HttpErrorResponse } from '@angular/common/http';\r\nimport { Observable, forkJoin, of } from 'rxjs';\r\nimport { map,catchError, filter, delay, tap, mergeMap,concatMap } from 'rxjs/operators';\r\nimport { HttpUtilsService } from '../utils/http-utils.service';\r\nimport { QueryParamsModel } from '../models/query-models/query-params.model';\r\nimport { ProductoModel } from '../models/producto.model';\r\nimport { QueryResultsModel } from '../../../../../../core/models/query-results.model';\r\nimport{URL_GLOBAL} from '../global';\r\nimport{Translation} from '../models/translation';\r\nimport { throwError,from } from 'rxjs';\r\n\r\n// import 'rxjs/add/observable/forkJoin';\r\n// import { Observable } from 'rxjs/Observable';\r\n// import 'rxjs/add/observable/forkJoin';\r\n\r\n// const URL_GLOBAL = 'api/productos';\r\nconst UPCITEMDB_URL='https://api.upcitemdb.com/prod/trial/lookup';\r\nconst URL_YANDEX='https://translate.yandex.net/api/v1.5/tr.json/translate?lang=en-es&key=trnsl.1.1.20190223T051510Z.d6f6972c4051f952.d0cde42c8caa6b7f2ec5c2ad49aa6bcb026beb11&text=';\r\n\r\n@Injectable()\r\nexport class ProductoService {\r\n\t\r\n\thttpOptions = this.httpUtils.getHTTPHeaders();\r\n\r\n\tconstructor(private http: HttpClient,\r\n\t\tprivate httpUtils: HttpUtilsService) { \r\n\t\t}\r\n\t\t\r\n\t//******************************************** mis htpps**************************************************** */\r\n\t// CREATE =>  POST: add a new producto to the server\r\n\tcrudProducto(producto: ProductoModel,opcion:number): Observable<any> {\r\n\t\t// Note: Add headers if needed (tokens/bearer)\r\n\t\tconst httpHeaders = this.httpUtils.getHTTPHeaders();\r\n\t\treturn this.http.post<any>(URL_GLOBAL+'crudProducto', {...producto,opcion:opcion}, { headers: httpHeaders});\r\n\t}\r\n\r\n\tsubidaMasivaProductos(productos: any[]): Observable<any> {\r\n\t\tconst httpHeaders = this.httpUtils.getHTTPHeaders();\r\n\t\treturn this.http.post<any>(URL_GLOBAL+'subidaMasivaProductos', {data:[...productos]}, { headers: httpHeaders});\r\n\t}\r\n\r\n\t\r\n\tfindProductos(queryParams: QueryParamsModel): Observable<QueryResultsModel> {\r\n\t\tconst httpHeaders = this.httpUtils.getHTTPHeaders();\r\n\t\treturn this.http.post<any>(URL_GLOBAL+'findProductos',queryParams,{ headers: httpHeaders})\r\n\t}\r\n\r\n\tfindProductoByCodigoFabricante(codigoFabricante){\r\n\t\tconst httpHeaders = this.httpUtils.getHTTPHeaders();\r\n\t\treturn this.http.get<ProductoModel>(URL_GLOBAL+`findProductoByCodigoFabricante/${codigoFabricante}`,{ headers: httpHeaders})\r\n\t}\r\n\t//esta funcion se utiliza para buscar varios productos en una solo llamada\r\n\tfindProductosByCodigoFabricante(productos:any[]) {\r\n\t\tconsole.log(productos);\r\n\t\tconst httpHeaders = this.httpUtils.getHTTPHeaders();\r\n\t\treturn from(productos).pipe(concatMap(prod=>this.http.get<any>(URL_GLOBAL+`findProductosByCodigoFabricante/${prod.codigofabricante}`,{headers: httpHeaders})))\r\n\t}\r\n\r\n\t// UPDATE => PUT: update the producto on the server\r\n\tupdateProducto(producto: ProductoModel): Observable<any> {\r\n\t\tconst httpHeader = this.httpUtils.getHTTPHeaders();\r\n\t\treturn this.http.put(URL_GLOBAL, producto, { headers: httpHeader });\r\n\t}\r\n\t\r\n\t//busca productos en www.upcitemdb.com\r\n\r\n\t//************************************************* */\r\n\r\n\t   /**\r\n     * Handle API errors\r\n     * @param errorResponse error response object\r\n     */\r\n    private handleError(errorResponse: HttpErrorResponse): Observable<any> {\r\n        console.error(errorResponse);\r\n        return throwError(errorResponse.error.message || 'Please check your network connection');\r\n\r\n\t}\r\n\tgetTranslation(textoTraducir): Observable<Translation> {\r\n        console.log(\"aqui estoy\");\r\n        // const requestUrl = this.createRequest(word, fromLang, toLang);\r\n        const requestUrl=\"https://translate.yandex.net/api/v1.5/tr.json/translate?lang=en-es&key=trnsl.1.1.20190223T051510Z.d6f6972c4051f952.d0cde42c8caa6b7f2ec5c2ad49aa6bcb026beb11&text=\";\r\n        return this.http.get<any>(requestUrl+textoTraducir)\r\n            .pipe(\r\n                map(response => {\r\n                    return new Translation(response.code, response.lang, response.text);\r\n                }),\r\n                catchError(err => this.handleError(err))\r\n            );\r\n\t}\r\n\t\r\n\tgetMultipleTranslate(titulo,descripcion,descripcionAlternativa){\r\n\t\treturn forkJoin(\r\n\t\t\t\tthis.getTranslation(titulo),\r\n\t\t\t\tthis.getTranslation(descripcion),\r\n\t\t\t\tthis.getTranslation(descripcionAlternativa)\r\n\t\t\t)\r\n\t}\r\n\r\n\t//para subir images\r\n\t// makeFileRequest(idproducto,params:Array<string>,files:Array<File>,name:string){\r\n\t// \tconsole.log(files)\r\n\t// \treturn new Promise(function(resolve,reject){\r\n\t// \t  var formData:any=new FormData();\r\n\t// \t  //acronimo de ajax\r\n\t// \t  var xhr=new XMLHttpRequest();\r\n\t// \t  for(var i=0; i< files.length;i++){\r\n\t// \t\tformData.append(name,files[i],files[i].name);\r\n\t// \t  }\r\n\t// \t  xhr.onreadystatechange=function(){\r\n\t// \t\tif(xhr.readyState==4){\r\n\t// \t\t  if(xhr.status==200){\r\n\t// \t\t\tresolve(JSON.parse(xhr.response));\r\n\t// \t\t  }else{\r\n\t// \t\t\treject(xhr.response);\r\n\t// \t\t  }\r\n\t// \t\t}\r\n\t// \t  }\r\n\t// \t  xhr.open('POST',URL_GLOBAL+'upload_images/'+idproducto,true);\r\n\t// \t//   xhr.setRequestHeader('Authorization',token);\r\n\t// \t  xhr.send(formData);\r\n\t// \t});\r\n  \r\n\t//   }\r\n\r\n\r\n}\r\n\r\n\r\n","import { Injectable } from '@angular/core';\r\nimport { ActionNotificationComponent } from '../../_shared/action-natification/action-notification.component';\r\nimport { MatSnackBar, MatDialog } from '@angular/material';\r\n\r\nimport { DeleteEntityDialogComponent } from '../../_shared/delete-entity-dialog/delete-entity-dialog.component';\r\nimport { FetchEntityDialogComponent } from '../../_shared/fetch-entity-dialog/fetch-entity-dialog.component';\r\nimport { UpdateStatusDialogComponent } from '../../_shared/update-status-dialog/update-status-dialog.component';\r\n\r\n\r\nexport enum MessageType {\r\n\tCreate,\r\n\tRead,\r\n\tUpdate,\r\n\tDelete\r\n}\r\n\r\n@Injectable()\r\nexport class LayoutUtilsService {\r\n\tconstructor(private snackBar: MatSnackBar,\r\n\t\tprivate dialog: MatDialog) { }\r\n\r\n\t// SnackBar for notifications\r\n\tshowActionNotification(\r\n\t\tmessage: string,\r\n\t\ttype: MessageType = MessageType.Create,\r\n\t\tduration: number = 10000,\r\n\t\tshowCloseButton: boolean = true,\r\n\t\tshowUndoButton: boolean = false,\r\n\t\tundoButtonDuration: number = 3000,\r\n\t\tverticalPosition: 'top' | 'bottom' = 'top'\r\n\t) {\r\n\t\treturn this.snackBar.openFromComponent(ActionNotificationComponent, {\r\n\t\t\tduration: duration,\r\n\t\t\tdata: {\r\n\t\t\t\tmessage,\r\n\t\t\t\tsnackBar: this.snackBar,\r\n\t\t\t\tshowCloseButton: showCloseButton,\r\n\t\t\t\tshowUndoButton: showUndoButton,\r\n\t\t\t\tundoButtonDuration,\r\n\t\t\t\tverticalPosition,\r\n\t\t\t\ttype,\r\n\t\t\t\taction: 'Undo'\r\n\t\t\t},\r\n\t\t\tverticalPosition: verticalPosition\r\n\t\t});\r\n\t}\r\n\r\n\t// Method returns instance of MatDialog\r\n\tdeleteElement(title: string = '', description: string = '', waitDesciption: string = '') {\r\n\t\treturn this.dialog.open(DeleteEntityDialogComponent, {\r\n\t\t\tdata: { title, description, waitDesciption },\r\n\t\t\twidth: '440px'\r\n\t\t});\r\n\t}\r\n\r\n\t// Method returns instance of MatDialog\r\n\tfetchElements(_data) {\r\n\t\treturn this.dialog.open(FetchEntityDialogComponent, {\r\n\t\t\tdata: _data,\r\n\t\t\twidth: '50%',\r\n\t\t\theight:'50%'\r\n\t\t});\r\n\t}\r\n\r\n\t// Method returns instance of MatDialog\r\n\tupdateStatusForCustomers(title, statuses, messages) {\r\n\t\treturn this.dialog.open(UpdateStatusDialogComponent, {\r\n\t\t\tdata: { title, statuses, messages },\r\n\t\t\twidth: '480px'\r\n\t\t});\r\n\t}\r\n}\r\n","module.exports = \"<div class=\\\"m-mat-snackbar\\\">\\r\\n\\t<div class=\\\"m-mat-snackbar__message\\\">{{data.message}}</div>\\r\\n\\t<div class=\\\"m-mat-snackbar__btn\\\">\\r\\n\\t\\t<button *ngIf=\\\"data.showUndoButton\\\" type=\\\"button\\\" mat-button color=\\\"primary\\\" (click)=\\\"onDismissWithAction()\\\">\\r\\n\\t\\t\\tUndo\\r\\n\\t\\t</button>\\r\\n\\t</div>\\r\\n\\t<div class=\\\"m-mat-snackbar__close\\\">\\r\\n\\t\\t<button *ngIf=\\\"data.showCloseButton\\\" \\r\\n\\t\\t\\tmat-icon-button \\r\\n\\t\\t\\t(click)=\\\"onDismiss()\\\"\\r\\n\\t\\t\\tcolor=\\\"warn\\\">\\r\\n\\t\\t\\t<mat-icon>clear</mat-icon>\\r\\n\\t\\t</button>\\r\\n\\t</div>\\r\\n</div>\\r\\n\"","import { Component, Inject, OnInit, ChangeDetectionStrategy } from '@angular/core';\r\nimport { MAT_SNACK_BAR_DATA, MatSnackBarRef } from '@angular/material';\r\nimport { timeout, delay } from 'rxjs/operators';\r\nimport { of } from 'rxjs';\r\n\r\n\r\n@Component({\r\n\tselector: 'm-action-natification',\r\n\ttemplateUrl: './action-notification.component.html',\r\n\tchangeDetection: ChangeDetectionStrategy.Default\r\n\r\n})\r\nexport class ActionNotificationComponent implements OnInit {\r\n\tconstructor(@Inject(MAT_SNACK_BAR_DATA) public data: any) { }\r\n\r\n\tngOnInit() {\r\n\t\tif (!this.data.showUndoButton || (this.data.undoButtonDuration >= this.data.duration)) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis.delayForUndoButton(this.data.undoButtonDuration).subscribe(() => {\r\n\t\t\tthis.data.showUndoButton = false;\r\n\t\t});\r\n\t}\r\n\r\n\tdelayForUndoButton(timeToDelay) {\r\n\t\treturn of('').pipe(delay(timeToDelay));\r\n\t}\r\n\r\n\tpublic onDismissWithAction() { this.data.snackBar.dismiss(); }\r\n\r\n  \tpublic onDismiss() { this.data.snackBar.dismiss(); }\r\n}\r\n","module.exports = \"<div class=\\\"m-mat-alert  m-mat-alert--{{type}}\\\" role=\\\"alert\\\">\\r\\n\\t<div class=\\\"m-mat-alert__icon\\\">\\r\\n\\t\\t<i class=\\\"la la-warning\\\"></i>\\r\\n\\t</div>\\r\\n\\t<div class=\\\"m-mat-alert__text\\\">\\r\\n\\t\\t<ng-content></ng-content>\\r\\n\\t</div>\\r\\n\\t<div class=\\\"m-mat-alert__close\\\" *ngIf=\\\"showCloseButton\\\">\\r\\n\\t\\t<button type=\\\"button\\\" \\r\\n\\t\\t\\tmat-icon-button \\r\\n\\t\\t\\tcolor=\\\"warn\\\" \\r\\n\\t\\t\\t(click)=\\\"closeAlert()\\\">\\r\\n\\t\\t\\t<mat-icon class=\\\"material-icons\\\">clear</mat-icon>\\r\\n\\t\\t</button>\\r\\n\\t</div>\\r\\n</div>\\r\\n\"","import { Component, Inject, OnInit, Input, OnChanges, Output, EventEmitter } from '@angular/core';\r\n\r\n@Component({\r\n\tselector: 'm-alert',\r\n\ttemplateUrl: './alert.component.html'\r\n})\r\nexport class AlertComponent implements OnInit {\r\n\r\n\t@Input() type: 'primary | accent | warn';\r\n\t@Input() duration: number = 0;\r\n\t@Input() showCloseButton: boolean = true;\r\n\t@Output() close = new EventEmitter<boolean>();\r\n\r\n\talertShowing: boolean = true;\r\n\r\n\tngOnInit() {\r\n\t\tif (this.duration === 0) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tsetTimeout(() => {\r\n\t\t\tthis.closeAlert();\r\n\t\t}, this.duration);\r\n\t}\r\n\r\n\tcloseAlert() {\r\n\t\tthis.close.emit();\r\n\t}\r\n}\r\n","module.exports = \"<div class=\\\"m-portlet\\\">\\r\\n\\t<div class=\\\"m-portlet__head\\\">\\r\\n\\t\\t<div class=\\\"m-portlet__head-progress\\\">\\r\\n\\t\\t\\t<!-- here can place a progress bar-->\\r\\n\\t\\t\\t<mat-progress-bar mode=\\\"indeterminate\\\" *ngIf=\\\"viewLoading\\\"></mat-progress-bar>\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class=\\\"m-portlet__head-caption\\\">\\r\\n\\t\\t\\t<div class=\\\"m-portlet__head-title\\\">\\r\\n\\t\\t\\t\\t<span class=\\\"m-portlet__head-icon m--hide\\\">\\r\\n\\t\\t\\t\\t\\t<i class=\\\"la la-gear\\\"></i>\\r\\n\\t\\t\\t\\t</span>\\r\\n\\t\\t\\t\\t<h3 class=\\\"m-portlet__head-text\\\">\\r\\n\\t\\t\\t\\t\\t{{data.title}}\\r\\n\\t\\t\\t\\t</h3>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n\\t<div class=\\\"m-form\\\">\\r\\n\\t\\t<div class=\\\"m-portlet__body\\\">\\r\\n\\t\\t\\t<div class=\\\"form-group m-form__group row\\\">\\r\\n\\t\\t\\t\\t<div class=\\\"col-lg-12\\\">\\r\\n\\t\\t\\t\\t\\t{{ viewLoading ? data.waitDesciption : data.description}}\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class=\\\"m-portlet__foot m-portlet__no-border m-portlet__foot--fit text-right\\\">\\r\\n\\t\\t\\t<div class=\\\"m-form__actions m-form__actions--sm\\\">\\r\\n\\t\\t\\t\\t<button mat-button (click)=\\\"onNoClick()\\\">Cancelar</button>&nbsp;\\r\\n\\t\\t\\t\\t<button mat-button (click)=\\\"onYesClick()\\\" color=\\\"primary\\\" cdkFocusInitial [disabled]=\\\"viewLoading\\\">Aceptar</button>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n</div>\"","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\r\n\r\n@Component({\r\n\tselector: 'm-delete-entity-dialog',\r\n\ttemplateUrl: './delete-entity-dialog.component.html'\r\n})\r\nexport class DeleteEntityDialogComponent implements OnInit {\r\n\tviewLoading: boolean = false;\r\n\r\n\tconstructor(\r\n\t\tpublic dialogRef: MatDialogRef<DeleteEntityDialogComponent>,\r\n\t\t@Inject(MAT_DIALOG_DATA) public data: any\r\n\t) { }\r\n\r\n\tngOnInit() {\r\n\t}\r\n\r\n\tonNoClick(): void {\r\n\t\tthis.dialogRef.close();\r\n\t}\r\n\r\n\tonYesClick(): void {\r\n\t\t/* Server loading imitation. Remove this */\r\n\t\tthis.viewLoading = true;\r\n\t\tsetTimeout(() => {\r\n\t\t\tthis.dialogRef.close(true); // Keep only this row\r\n\t\t}, 2500);\r\n\t}\r\n}\r\n","module.exports = \"<div class=\\\"m-portlet\\\">\\r\\n\\t<div class=\\\"m-portlet__head\\\">\\r\\n\\t\\t<div class=\\\"m-portlet__head-caption\\\">\\r\\n\\t\\t\\t<div class=\\\"m-portlet__head-title\\\">\\r\\n\\t\\t\\t\\t<span class=\\\"m-portlet__head-icon m--hide\\\">\\r\\n\\t\\t\\t\\t\\t<i class=\\\"la la-gear\\\"></i>\\r\\n\\t\\t\\t\\t</span>\\r\\n\\t\\t\\t\\t<h3 class=\\\"m-portlet__head-text\\\">\\r\\n\\t\\t\\t\\t\\tInformación\\r\\n\\t\\t\\t\\t</h3>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n\\t<div class=\\\"m-form m-form--fit m-form--label-align-right m-form--group-seperator-dashed\\\">\\r\\n\\t\\t<div class=\\\"m-portlet__body\\\">\\r\\n\\t\\t\\t<div class=\\\"m-list-timeline m-list-timeline--skin-light m--padding-30\\\">\\r\\n\\t\\t\\t\\t<div class=\\\"m-list-timeline__items\\\">\\r\\n\\t\\t\\t\\t\\t<div class=\\\"m-list-timeline__item\\\" *ngFor=\\\"let message of data\\\">\\r\\n\\t\\t\\t\\t\\t\\t<span class=\\\"m-list-timeline__badge m-list-timeline__badge--{{ getItemCssClassByStatus(message.status)}}\\\"></span>\\r\\n\\t\\t\\t\\t\\t\\t<span class=\\\"m-list-timeline__text\\\">{{message.text}}\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"m-badge m-badge--{{ getItemCssClassByStatus(message.status)}} m-badge--wide\\\">{{getItemMessageByStatus(message.status)}}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"m-badge m-badge--metal m-badge--wide\\\" *ngIf=\\\"message.status==0\\\">{{message?.error}}</span>\\r\\n\\t\\t\\t\\t\\t\\t</span>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class=\\\"m-portlet__foot m-portlet__no-border m-portlet__foot--fit text-right\\\">\\r\\n\\t\\t\\t<div class=\\\"m-form__actions m-form__actions--solid\\\">\\r\\n\\t\\t\\t\\t<!-- <button mat-button mat-raised-button (click)=\\\"onNoClick()\\\">Cancel</button>&nbsp; -->\\r\\n\\t\\t\\t\\t<button mat-button mat-raised-button color=\\\"primary\\\" [mat-dialog-close]=\\\"data.animal\\\" cdkFocusInitial>Ok</button>&nbsp;\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n</div>\"","import { Component, Inject } from '@angular/core';\r\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\r\n\r\n@Component({\r\n\tselector: 'm-fetch-entity-dialog',\r\n\ttemplateUrl: './fetch-entity-dialog.component.html'\r\n})\r\nexport class FetchEntityDialogComponent {\r\n\tconstructor(\r\n\t\tpublic dialogRef: MatDialogRef<FetchEntityDialogComponent>,\r\n\t\t@Inject(MAT_DIALOG_DATA) public data: any\r\n\t) {}\r\n\r\n\tonNoClick(): void {\r\n\t\tthis.dialogRef.close();\r\n\t}\r\n\r\n\t/** UI */\r\n\tgetItemCssClassByStatus(status: number = 0) {\r\n\t\tswitch (status) {\r\n\t\t\t// case 1: return 'metal';\r\n\t\t\tcase 0: return 'danger';\r\n\t\t\tcase 1: return 'success';\r\n\t\t\tdefault: return 'danger';\r\n\t\t}\r\n\t}\r\n\tgetItemMessageByStatus(status: number = 0){\r\n\t\tswitch (status) {\r\n\t\t\tcase 0: return 'No publicado';\r\n\t\t\tcase 1: return 'Publicado';\r\n\t\t\tdefault: return 'No publicado';\r\n\t\t}\r\n\t}\r\n}\r\n","module.exports = \"<mat-dialog-content>\\n  <h2 mat-dialog-title align=\\\"center\\\">{{titulo}}</h2>\\n  <table mat-table [dataSource]=\\\"ELEMENT_DATA\\\" *ngIf=\\\"data\\\">\\n      <ng-container matColumnDef=\\\"INDEX\\\">\\n        <th mat-header-cell *matHeaderCellDef> Nº</th>\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.index}} </td>\\n      </ng-container>\\n\\n      <!-- Position Column -->\\n      <ng-container matColumnDef=\\\"PRODUCTO\\\">\\n        <th mat-header-cell *matHeaderCellDef> PRODUCTO</th>\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.descripcion}} </td>\\n      </ng-container>\\n  \\n      <!-- Name Column -->\\n      <ng-container matColumnDef=\\\"CODIGOBARRAS\\\">\\n        <th mat-header-cell *matHeaderCellDef> CÓDIGO DE BARRAS </th>\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.codigofabricante}} </td>\\n      </ng-container>\\n  \\n      <!-- Weight Column -->\\n      <ng-container matColumnDef=\\\"COSTO\\\">\\n        <th mat-header-cell *matHeaderCellDef> COSTO (INCLUYE IVA)</th>\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.costo}} </td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"PRECIO\\\">\\n        <th mat-header-cell *matHeaderCellDef> PRECIO (PVP)</th>\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.precio1}} </td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"TIPO\\\">\\n        <th mat-header-cell *matHeaderCellDef> TIPO </th>\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.idtipo}} </td>\\n      </ng-container>\\n  \\n      <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\" ></tr>\\n      <tr  mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n  </table>\\n  <div *ngIf=\\\"!data\\\">\\n      No existen productos\\n  </div>\\n\\n</mat-dialog-content>\\n<mat-dialog-actions  align=\\\"center\\\">\\n  <button mat-raised-button (click)=\\\"subirProductos()\\\">\\n    OK\\n  </button><!-- Call 'update-stated-dialog' from _shared folder -->\\n</mat-dialog-actions>\\n  \\n  \\n  \"","module.exports = \"table {\\n  width: 100%; }\\n\\n.mat-form-field {\\n  font-size: 14px;\\n  width: 100%; }\\n\\ntd,\\nth {\\n  width: 25%; }\\n\\n.nuevo-pointer {\\n  cursor: pointer; }\\n\"","import { Component, OnInit,Inject } from '@angular/core';\nimport {MatDialog, MatDialogRef, MAT_DIALOG_DATA, MatTableDataSource} from '@angular/material';\nimport {FormBuilder, Validators, FormGroup,FormControl } from \"@angular/forms\";\n\n@Component({\n  selector: 'm-modal-products',\n  templateUrl: './modal-products.component.html',\n  styleUrls: ['./modal-products.component.scss']\n})\nexport class ModalProductsComponent implements OnInit {\n  para;\n\n  displayedColumns: string[] = ['INDEX','PRODUCTO','CODIGOBARRAS','COSTO','PRECIO','TIPO'];\n  ELEMENT_DATA: any[] = [];\n  titulo='ESTOS PRODUCTOS SE CREARÁN EN EL SISTEMA';\n  constructor( private fb: FormBuilder,\n    public dialogRef: MatDialogRef<ModalProductsComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any,\n    public dialog: MatDialog) {\n     }\n\n  ngOnInit() {\n    console.log(this.data);\n    this.ELEMENT_DATA=this.data;\n    \n  }\n\n  subirProductos(){\n    this.dialogRef.close(this.data);\n  }\n\n}\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule,  } from '@angular/common';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n// import { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\n\r\n\r\n\r\n// Core => Utils\r\n// import { HttpUtilsService } from './_core/utils/http-utils.service';\r\n// import { TypesUtilsService } from './_core/utils/types-utils.service';\r\n// import { LayoutUtilsService } from './_core/utils/layout-utils.service';\r\n// import { InterceptService } from './_core/utils/intercept.service';\r\n// Shared\r\nimport { ActionNotificationComponent } from './action-natification/action-notification.component';\r\nimport { DeleteEntityDialogComponent } from './delete-entity-dialog/delete-entity-dialog.component';\r\nimport { FetchEntityDialogComponent } from './fetch-entity-dialog/fetch-entity-dialog.component';\r\nimport { UpdateStatusDialogComponent } from './update-status-dialog/update-status-dialog.component';\r\nimport { AlertComponent } from './alert/alert.component';\r\nimport { ModalProductsComponent } from './modal-products/modal-products.component';\r\n// Material\r\nimport {\r\n\tMatInputModule,\r\n\tMatPaginatorModule,\r\n\tMatProgressSpinnerModule,\r\n\tMatSortModule,\r\n\tMatTableModule,\r\n\tMatSelectModule,\r\n\tMatMenuModule,\r\n\tMatProgressBarModule,\r\n\tMatButtonModule,\r\n\tMatCheckboxModule,\r\n\tMatDialogModule,\r\n\tMatTabsModule,\r\n\tMatNativeDateModule,\r\n\tMatCardModule,\r\n\tMatRadioModule,\r\n\tMatIconModule,\r\n\tMatDatepickerModule,\r\n\tMatAutocompleteModule,\r\n\tMAT_DIALOG_DEFAULT_OPTIONS,\r\n\tMatSnackBarModule,\r\n\tMatTooltipModule\r\n\t\r\n} from '@angular/material';\r\n\r\n\r\n\r\n\r\n@NgModule({\r\n\timports: [\r\n\t\tMatDialogModule,\r\n\t\tCommonModule,\r\n\t\t// HttpClientModule,\r\n\t\tFormsModule,\r\n\t\tReactiveFormsModule,\r\n\t\tMatButtonModule,\r\n\t\tMatMenuModule,\r\n\t\tMatSelectModule,\r\n        MatInputModule,\r\n\t\tMatTableModule,\r\n\t\tMatAutocompleteModule,\r\n\t\tMatRadioModule,\r\n\t\tMatIconModule,\r\n\t\tMatNativeDateModule,\r\n\t\tMatProgressBarModule,\r\n\t\tMatDatepickerModule,\r\n\t\tMatCardModule,\r\n\t\tMatPaginatorModule,\r\n\t\tMatSortModule,\r\n\t\tMatCheckboxModule,\r\n\t\tMatProgressSpinnerModule,\r\n\t\tMatSnackBarModule,\r\n\t\tMatTabsModule,\r\n\t\tMatTooltipModule,\r\n\t\r\n\t],\r\n\tproviders: [\r\n\t\r\n\t\t// {\r\n\t\t// \tprovide: MAT_DIALOG_DEFAULT_OPTIONS,\r\n\t\t// \tuseValue: {\r\n\t\t// \t\thasBackdrop: true,\r\n\t\t// \t\tpanelClass: 'm-mat-dialog-container__wrapper',\r\n\t\t// \t\theight: 'auto',\r\n\t\t// \t\twidth: '900px'\r\n\t\t// \t}\r\n\t\t// },\r\n\t\t// HttpUtilsService,\r\n\t\t// OrdersService,\r\n\t\t// TypesUtilsService,\r\n\t\t// LayoutUtilsService,\r\n\r\n\t],\r\n\tentryComponents: [\r\n\t\tActionNotificationComponent,\r\n\t\tDeleteEntityDialogComponent,\r\n\t\tFetchEntityDialogComponent,\r\n\t\tUpdateStatusDialogComponent,\r\n\t\tModalProductsComponent\r\n        \r\n    ],\r\n    exports:[\r\n        ActionNotificationComponent,\r\n\t\tDeleteEntityDialogComponent,\r\n\t\tFetchEntityDialogComponent,\r\n        UpdateStatusDialogComponent,\r\n\t\tAlertComponent,\r\n\t\tModalProductsComponent\r\n    ],\r\n\tdeclarations: [\r\n\t\t// Shared\r\n\t\tActionNotificationComponent,\r\n\t\tDeleteEntityDialogComponent,\r\n\t\tFetchEntityDialogComponent,\r\n\t\tUpdateStatusDialogComponent,\r\n\t\tAlertComponent,\r\n\t\tModalProductsComponent\r\n\t\r\n\t]\r\n})\r\nexport class SharedAlertModule { }\r\n","module.exports = \"<div class=\\\"m-portlet\\\" [ngClass]=\\\"{ 'm-portlet--body-progress' : viewLoading, 'm-portlet--body-progress-overlay' : loadingAfterSubmit }\\\">\\r\\n\\t<div class=\\\"m-portlet__head\\\">\\r\\n\\t\\t<div class=\\\"m-portlet__head-caption\\\">\\r\\n\\t\\t\\t<div class=\\\"m-portlet__head-title\\\">\\r\\n\\t\\t\\t\\t<span class=\\\"m-portlet__head-icon m--hide\\\">\\r\\n\\t\\t\\t\\t\\t<i class=\\\"la la-gear\\\"></i>\\r\\n\\t\\t\\t\\t</span>\\r\\n\\t\\t\\t\\t<h3 class=\\\"m-portlet__head-text\\\">\\r\\n\\t\\t\\t\\t\\t{{ data.title }}\\r\\n\\t\\t\\t\\t</h3>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n\\t<div class=\\\"m-form m-form--fit m-form--label-align-right m-form--group-seperator-dashed\\\">\\r\\n\\t\\t<div class=\\\"m-portlet__body\\\">\\r\\n\\t\\t\\t<div class=\\\"m-portlet__body-progress\\\">\\r\\n\\t\\t\\t\\t<mat-spinner [diameter]=\\\"20\\\"></mat-spinner>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<div class=\\\"m-list-timeline m-list-timeline--skin-light m--padding-30\\\">\\r\\n\\t\\t\\t\\t<div class=\\\"m-list-timeline__items\\\">\\r\\n\\t\\t\\t\\t\\t<div class=\\\"m-list-timeline__item\\\" *ngFor=\\\"let message of data.messages\\\">\\r\\n\\t\\t\\t\\t\\t\\t<span class=\\\"m-list-timeline__badge m-list-timeline__badge--{{ message.statusCssClass }}\\\"></span>\\r\\n\\t\\t\\t\\t\\t\\t<span class=\\\"m-list-timeline__text\\\">{{message.text}}\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"m-badge m-badge--{{message.statusCssClass}} m-badge--wide\\\">{{ message.statusTitle }}</span>\\r\\n\\t\\t\\t\\t\\t\\t</span>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class=\\\"m-portlet__foot m-portlet__no-border m-portlet__foot--fit text-right\\\">\\r\\n\\t\\t\\t<div class=\\\"m-form__actions m-form__actions--solid\\\">\\r\\n\\t\\t\\t\\t<div class=\\\"row\\\">\\r\\n\\t\\t\\t\\t\\t<div class=\\\"col-lg-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t<mat-form-field>\\r\\n\\t\\t\\t\\t\\t\\t\\t<mat-select placeholder=\\\"Status\\\" [formControl]=\\\"selectedStatusForUpdate\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<mat-option *ngFor=\\\"let status of data.statuses\\\" value=\\\"{{ status.value }}\\\">{{status.text}}</mat-option>\\r\\n\\t\\t\\t\\t\\t\\t\\t</mat-select>\\r\\n\\t\\t\\t\\t\\t\\t\\t<mat-hint align=\\\"start\\\">Select\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<strong>Status</strong> for rows updating</mat-hint>\\r\\n\\t\\t\\t\\t\\t\\t</mat-form-field>\\r\\n\\t\\t\\t\\t\\t\\t&nbsp;\\r\\n\\t\\t\\t\\t\\t\\t<button type=\\\"button\\\" mat-raised-button color=\\\"primary\\\" (click)=\\\"updateStatus()\\\" [disabled]=\\\"selectedStatusForUpdate.value.length == 0\\\">Update status</button>&nbsp;\\r\\n\\t\\t\\t\\t\\t\\t<button type=\\\"button\\\" mat-raised-button (click)=\\\"onNoClick()\\\">Cancel</button>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n</div>\"","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\r\nimport { FormControl } from '@angular/forms';\r\n\r\n@Component({\r\n\tselector: 'm-update-status-dialog',\r\n\ttemplateUrl: './update-status-dialog.component.html'\r\n})\r\nexport class UpdateStatusDialogComponent implements OnInit {\r\n\tselectedStatusForUpdate = new FormControl('');\r\n\tviewLoading: boolean = false;\r\n\tloadingAfterSubmit: boolean = false;\r\n\tconstructor(\r\n\t\tpublic dialogRef: MatDialogRef<UpdateStatusDialogComponent>,\r\n\t\t@Inject(MAT_DIALOG_DATA) public data: any) {}\r\n\r\n\tngOnInit() {\r\n\t\t/* Server loading imitation. Remove this */\r\n\t\tthis.viewLoading = true;\r\n\t\tsetTimeout(() => {\r\n\t\t\tthis.viewLoading = false;\r\n\t\t}, 2500);\r\n\t}\r\n\r\n\tonNoClick(): void {\r\n\t\tthis.dialogRef.close();\r\n\t}\r\n\r\n\tupdateStatus() {\r\n\t\tif (this.selectedStatusForUpdate.value.length === 0) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t/* Server loading imitation. Remove this */\r\n\t\tthis.viewLoading = true;\r\n\t\tthis.loadingAfterSubmit = true;\r\n\t\tsetTimeout(() => {\r\n\t\t\tthis.dialogRef.close(this.selectedStatusForUpdate.value); // Keep only this row\r\n\t\t}, 2500);\r\n\t}\r\n}\r\n"],"sourceRoot":""}
{"version":3,"sources":["webpack:///./src/app/content/pages/components/e-commerce/_core/models/usuario.model.ts","webpack:///./src/app/content/pages/components/e-commerce/_core/services/categoria.service.ts","webpack:///./src/app/content/pages/components/e-commerce/_core/services/importacion-producto.service.ts","webpack:///./src/app/content/pages/components/e-commerce/_core/services/importacion.service.ts","webpack:///./src/app/content/pages/components/e-commerce/_core/services/index.ts"],"names":[],"mappings":"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","file":"components-e-commerce-e-commerce-module~envio-datos-cliente-envio-datos-cliente-module.js","sourcesContent":["export class UsuarioModel {\r\n    idusuario:number;\r\n    nombres:string;\r\n    apellidos:string;\r\n    clave:string;\r\n    cedula:string;\r\n    correo:string;\r\n    rol:number;\r\n    direccion:string;\r\n    referencia:string;\r\n    ciudad:string;\r\n    telefono:string;\r\n\r\n\r\n\r\n    \tclear() {\r\n        this.idusuario=0;\r\n\t\tthis.nombres='';\r\n        this.apellidos='';\r\n\t\tthis.clave='';\r\n        this.cedula='';\r\n        this.direccion='';\r\n        this.referencia='';\r\n        this.ciudad='';\r\n        this.telefono='';\r\n        this.correo='';\r\n    \r\n\t}\r\n}","\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable, forkJoin, BehaviorSubject, of } from 'rxjs';\r\nimport { mergeMap } from 'rxjs/operators';\r\nimport { HttpUtilsService } from '../utils/http-utils.service';\r\nimport { CategoriaModel, MarcaModel, ClasificacionModel, PresentacionModel } from '../models';\r\nimport { QueryParamsModel } from '../models/query-models/query-params.model';\r\nimport { QueryResultsModel } from '../models/query-models/query-results.model';\r\nimport{URL_GLOBAL}  from '../global';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CategoriaService {\r\nlastFilter$: BehaviorSubject<QueryParamsModel> = new BehaviorSubject(new QueryParamsModel({}, 'asc', '', 0, 10));\r\n\r\n\tconstructor(private http: HttpClient,\r\n\t\tprivate httpUtils: HttpUtilsService) { }\r\n\r\n\t\r\n\t\r\n\tcrudCategoria(categoria: CategoriaModel,opcion:number): Observable<any> {\r\n\t\t// Note: Add headers if needed (tokens/bearer)\r\n\t\tconst httpHeaders = this.httpUtils.getHTTPHeaders();\r\n\t\treturn this.http.post<any>(URL_GLOBAL+'crudTipo', {...categoria,opcion:opcion}, { headers: httpHeaders});\r\n\t}\r\n  findCategorias(queryParams: QueryParamsModel): Observable<QueryResultsModel> {\r\n\t\tconst httpHeaders = this.httpUtils.getHTTPHeaders();\r\n\r\n\t\treturn this.http.post<any>(URL_GLOBAL+ 'findTipos',queryParams,{ headers: httpHeaders })\r\n\t}\r\n\r\n\tgetCategorias(): Observable<CategoriaModel[]> {\r\n\t\tconst httpHeaders = this.httpUtils.getHTTPHeaders();\r\n\t\treturn this.http.get<CategoriaModel[]>(URL_GLOBAL+ 'allcategorias',{ headers: httpHeaders })\r\n\t}\r\n\r\n\tgetAllClasificaciones(): Observable<ClasificacionModel[]> {\r\n\t\tconst httpHeaders = this.httpUtils.getHTTPHeaders();\r\n\t\treturn this.http.get<ClasificacionModel[]>(URL_GLOBAL+ 'getAllClasificaciones',{ headers: httpHeaders })\r\n\t}\r\n\r\n\tgetAllMarcas(): Observable<MarcaModel[]> {\r\n\t\tconst httpHeaders = this.httpUtils.getHTTPHeaders();\r\n\t\treturn this.http.get<MarcaModel[]>(URL_GLOBAL+ 'getAllMarcas',{ headers: httpHeaders })\r\n\t}\r\n\r\n\tgetCategoriasByClasificaciones(idclasificacion: string): Observable<CategoriaModel[]> {\r\n\t\tconst httpHeaders = this.httpUtils.getHTTPHeaders();\r\n\t\treturn this.http.get<CategoriaModel[]>(URL_GLOBAL+ 'getCategoriasByClasificaciones/'+idclasificacion,{ headers: httpHeaders })\r\n\t}\r\n\r\n\tgetPresentacionesByMarcaAndCategoria(idmarca, idcategoria): Observable<PresentacionModel[]>{\r\n\t\tconst httpHeaders = this.httpUtils.getHTTPHeaders();\r\n\t\treturn this.http.get<PresentacionModel[]>(URL_GLOBAL+ 'getPresentacionesByMarcaAndCategoria/'+idcategoria+'/'+idmarca,\r\n\t\t{ headers: httpHeaders })\r\n\t}\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable, forkJoin, of } from 'rxjs';\r\nimport { map, mergeMap } from 'rxjs/operators';\r\nimport { HttpUtilsService } from '../utils/http-utils.service';\r\nimport { ProductoService } from './producto.service';\r\nimport { QueryParamsModel } from '../models/query-models/query-params.model';\r\nimport { ImportacionProductoModel } from '../models/importacion-producto.model';\r\nimport{UpcItemModel} from '../models/upc-item.model';\r\nimport { QueryResultsModel } from '../models/query-models/query-results.model';\r\nimport * as _ from 'lodash';\r\nimport { Body } from '@angular/http/src/body';\r\nimport{URL_GLOBAL} from '../global';\r\nconst API_IMPORTACION_PRODUCTOS_URL = 'api/importacionProductos';\r\n\r\n// Fake REST API (Mock)  http://localhost:3002/api/\r\n// This code emulates server calls\r\n@Injectable()\r\nexport class ImportacionProductoService {\r\n\tconstructor(\r\n\t\tprivate http: HttpClient,\r\n\t\tprivate httpUtils: HttpUtilsService,\r\n\t\tprivate ProductoService: ProductoService\r\n\t) {\r\n\t\t\r\n\t}\r\n\r\n\r\n\tfindProductosByIdImportacion(queryParams: QueryParamsModel,\tidimportacion: number){\r\n\t\treturn this.http.post<QueryResultsModel>(URL_GLOBAL+`findProductosByImportacion`,{...queryParams,idimportacion:idimportacion})\r\n\t}\r\n\r\n\r\n\t//buscar producto de upcitemdb\r\n\r\n\tbucarProductoUpcItemDb(upc){\r\n\t\tlet body={\r\n\t\t\t\"upc\":upc\r\n\t\t}\r\n\t\tconst httpHeaders = this.httpUtils.getHTTPHeaders();\r\n\t\treturn this.http.post(URL_GLOBAL+'buscarupc',body,{headers:httpHeaders});  \t\t\r\n\t}\r\n\r\n\tcrudImportacionProducto(importacionProducto: ImportacionProductoModel,opcion:number): Observable<any> {\r\n\t\t// console.log(importacionProducto);\r\n\t\treturn this.http.post<any>(URL_GLOBAL+'crudImportacionProducto', {...importacionProducto,opcion:opcion});\r\n\t}\r\n\r\n\r\n\t\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport{Http,Headers,} from '@angular/http';\r\nimport { Observable, forkJoin, BehaviorSubject, of } from 'rxjs';\r\nimport {map} from 'rxjs/operators'; \r\n\r\nimport { mergeMap } from 'rxjs/operators';\r\nimport { HttpUtilsService } from '../utils/http-utils.service';\r\nimport { ImportacionModel } from '../models/importacion.model';\r\nimport { QueryParamsModel } from '../models/query-models/query-params.model';\r\nimport { QueryResultsModel } from '../models/query-models/query-results.model';\r\nimport{URL_GLOBAL}  from '../global';\r\nconst API_IMPORTACIONES_URL = 'api/importaciones';\r\n@Injectable()\r\nexport class ImportacionService {\r\n\tpublic identity;\r\n  \tpublic token;\r\n\tlastFilter$: BehaviorSubject<QueryParamsModel> = new BehaviorSubject(new QueryParamsModel({}, 'asc', '', 0, 10));\r\n\r\n\tconstructor(private http: HttpClient,\r\n\t\tprivate httpUtils: HttpUtilsService,private _http:Http) { }\r\n\r\n\t// CREATE =>  POST: add a new product to the server\r\n\tcreateImportacion(importacion): Observable<ImportacionModel> {\r\n\t\tconst httpHeaders = this.httpUtils.getHTTPHeaders();\r\n\t\treturn this.http.post<ImportacionModel>(API_IMPORTACIONES_URL, importacion, { headers: httpHeaders });\r\n\t}\r\n\r\n\t// READ\r\n\tgetAllImportaciones(): Observable<ImportacionModel[]> {\r\n\t\treturn this.http.get<ImportacionModel[]>(API_IMPORTACIONES_URL);\r\n\t}\r\n\r\n\t// getImportacionById(importacionId: number): Observable<ImportacionModel> {\r\n\t// \treturn this.http.get<ImportacionModel>(API_IMPORTACIONES_URL + `/${importacionId}`);\r\n\t// }\r\n\tgetImportacionById(importacionId: number): Observable<ImportacionModel> {\r\n\t\treturn this.http.get<ImportacionModel>(URL_GLOBAL + `findImportacionById/${importacionId}`);\r\n\t}\r\n\r\n\t\r\n\tcrudImportacion(importacion: ImportacionModel,opcion:number): Observable<any> {\r\n\t\t// Note: Add headers if needed (tokens/bearer)\r\n\t\t// const httpHeaders = this.httpUtils.getHTTPHeaders();\r\n\t\tlet headers=new Headers({'Content-Type':'application/json','Authorization':this.getToken()});\r\n\t\treturn this._http.post(URL_GLOBAL+'crudImportacion', {...importacion,opcion:opcion}, { headers: headers}).pipe(map( res => res.json()));\r\n\t}\r\n\r\n\tfindImportaciones(queryParams: QueryParamsModel): Observable<QueryResultsModel> {\r\n\t\tconst httpHeaders = this.httpUtils.getHTTPHeaders();\r\n\r\n\t\treturn this.http.post<any>(URL_GLOBAL+ 'findImportaciones',queryParams,{ headers: httpHeaders })\r\n\t}\r\n\r\n\t// UPDATE => PUT: update the product on the server\r\n\tupdateImportacion(importacion: ImportacionModel): Observable<any> {\r\n\t\t// Note: Add headers if needed (tokens/bearer)\r\n\t\tconst httpHeaders = this.httpUtils.getHTTPHeaders();\r\n\t\treturn this.http.put(API_IMPORTACIONES_URL, importacion, { headers: httpHeaders });\r\n\t}\r\n\r\n\t\r\n\r\n\t// DELETE => delete the product from the server\r\n\tdeleteImportacion(importacionId: number): Observable<ImportacionModel> {\r\n\t\tconst url = `${API_IMPORTACIONES_URL}/${importacionId}`;\r\n\t\treturn this.http.delete<ImportacionModel>(url);\r\n\t}\r\n\r\n\tdeleteImportaciones(ids: number[] = []): Observable<any> {\r\n\t\tconst tasks$ = [];\r\n\t\tconst length = ids.length;\r\n\t\tfor (let i = 0; i < length; i++) {\r\n\t\t\ttasks$.push(this.deleteImportacion(ids[i]));\r\n\t\t}\r\n\t\treturn forkJoin(tasks$);\r\n\t}\r\n\tgetIdentity(){\r\n\t\tlet identity=JSON.parse(localStorage.getItem('identity'));\r\n\t\tif(identity!=\"undefined\"){\r\n\t\t  this.identity=identity;\r\n\t\t}else{\r\n\t\t  this.identity=null;\r\n\t\t}\r\n\t\treturn this.identity;\r\n\t  }\r\n\t  getToken(){\r\n        let token=localStorage.getItem('token');\r\n        if(token!=\"undefined\"){\r\n          this.token=token;\r\n        }else{\r\n          this.token=null;\r\n        }\r\n        return this.token;\r\n      }\r\n\r\n}\r\n","\r\nexport { ImportacionService } from './importacion.service';\r\nexport { ImportacionProductoService } from './importacion-producto.service';\r\nexport { ProductoService } from './producto.service';\r\nexport {MercadoLibreService} from './mercado-libre.service';\r\nexport {UsuarioService} from './usuario.service';\r\nexport {CategoriaService} from './categoria.service';"],"sourceRoot":""}